{"version":3,"sources":["Components/Header/headerImages/header-logo.png","Components/Buttons/Button.tsx","DAL/api.ts","BLL/auth-reducer.ts","Components/Header/Header.tsx","Components/Navbar/images/profile.svg","Components/Navbar/images/messages.svg","Components/Navbar/images/settings.svg","Components/Navbar/images/music.svg","Components/Navbar/images/users.svg","Components/Navbar/images/news.svg","Components/Navbar/Navbar.tsx","Components/Profile/images/profile-bg.png","BLL/profile-reducer.ts","Components/Profile/images/youtube.svg","Components/Profile/images/twitch.svg","Components/Profile/images/tiktok.svg","Components/Profile/images/instagram.svg","Components/Profile/SocialIcon/SocialIcon.tsx","Components/Profile/Posts/MyPosts/images/crown.svg","images/profile-avatar.png","Components/Profile/Posts/MyPosts/MyPosts.tsx","Components/Profile/Posts/Posts.tsx","Components/Profile/GeneralInfo/AboutMe/AboutMe.tsx","Components/Profile/GeneralInfo/GeneralInfo.tsx","Components/Profile/AdditionalInfo/AdditionalInfo.tsx","Components/Profile/Profile.tsx","BLL/users-reducer.ts","images/preloader.gif","Components/Preloader/Preloader.tsx","Components/Users/User/User.tsx","Components/Users/Users.tsx","Components/Login/LoginForm/LoginForm.tsx","Components/Login/Login.tsx","BLL/daily-quote-reducer.ts","images/q.jpg","Components/DailyQuote/DailyQuote.tsx","BLL/news-reducer.ts","images/profile-bg.png","Components/News/Article/Article.tsx","Components/News/NewsEmpty/NewsEmpty.tsx","Components/News/News.tsx","Components/Main/Main.tsx","Components/Footer/Footer.tsx","App.tsx","reportWebVitals.ts","BLL/store.ts","index.tsx","Components/Profile/Profile.module.css","Components/Login/LoginForm/LoginForm.module.css","Components/Navbar/Navbar.module.css","Components/Users/Users.module.css","Components/Profile/Posts/MyPosts/MyPosts.module.css","Components/Profile/GeneralInfo/AboutMe/AboutMe.module.css","Components/Header/Header.module.css","Components/DailyQuote/DailyQuote.module.scss","Components/News/Article/Article.module.scss","Components/Profile/Posts/Posts.module.css","Components/News/News.module.scss","Components/Profile/SocialIcon/SocialICons.module.css","Components/Profile/AdditionalInfo/AdditionalInfo.module.css","Components/Preloader/Preloader.module.scss","Components/Login/Login.module.scss","Components/Main/Main.module.css"],"names":["Button","React","memo","className","onClick","text","instance","axios","create","baseURL","headers","withCredentials","UsersApi","usersCount","currentPage","get","then","response","data","userId","post","delete","ProfileApi","paramsId","status","put","CommonApi","NewsApi","articlesCount","AuthApi","email","password","rememberMe","initState","id","login","isAuth","setAuthData","type","setMyAuthData","dispatch","resultCode","Header","authData","useSelector","state","authPage","useDispatch","useEffect","classes","inner","logoInner","to","logo","src","headerLogo","alt","loginButtons","userName","Navbar","navbar","menu","item","link","profileIcon","newsIcon","messagesIcon","userIcon","settingIcon","musicIcon","posts","message","likesCounter","profileInfo","postsNumber","friendsNumber","commentsNumber","photos","small","large","membership","userStatus","userProfile","fullName","newPostMessage","aboutUserInfo","userDescription","joinTime","userAddress","profileReducer","action","newPostValue","newPost","newValue","map","p","postId","socialIcons","icon","youTube","twitch","tiktok","instagram","SocialIcons","socialIcon","i","href","iconImg","icons","MyPosts","profilePage","profile","myPosts","t","info_line","avatar","userAvatar","likesInner","likesBtn","incLikesAC","crownIcon","crown","likesCount","Posts","addPostOnClickHandler","useCallback","addNewPostAC","onChangeHandler","e","currentTarget","value","title","onChange","textarea","btn","AboutMe","userInfo","line","description","GeneralInfo","AdditionalInfo","frame_wrapper","frameBorder","scrolling","height","width","allowFullScreen","Profile","useState","editMode","setEditMode","inputTitle","setInputTitle","useParams","onExitEditMode","console","log","header","profileBg","bg","header_info","header_left","header_left_box","header_mid","header_mid_box","avatar_box","userLevel","userMembership","onBlur","autoFocus","onDoubleClick","socialLinks","SocialIcon","main_content","replace","users","pagesNumber","totalCount","isFetching","isFollowed","s","setISFetching","setISFollowed","getUsers","setCurrentPage","items","usersReducer","u","followed","filter","Preloader","block","preloaderImg","img","User","user","userIsFollowed","onClickFollowHandler","onClickUnfollowHandler","visitUser","name","disabled","some","userBtn","Users","usersPage","onPageChange","event","page","unfollowUserAC","unFollowUser","followUserAC","followUser","users_inner","pagination","Pagination","count","color","size","users_elements","initialValues","submitForm","values","LoginForm","setDisabled","validate","errors","undefined","test","length","onSubmit","formik","handleChange","handleSubmit","touched","handleBlur","container","form","formRow","formLine","htmlFor","formLabel","inputError","input","error","disabledBtn","Login","quote","setQuoteIsFetching","getDailyQuote","DailyQuote","dailyQuotePage","onGetQuote","quoteInner","quoteText","quoteBg","articles","author","content","publishedAt","source","url","urlToImage","totalResults","isSuccess","warning","setNewsIsFetching","setNewsResponseSuccess","setNewsWarning","getNewsState","setNewsCurrentPage","itemsCount","catch","finally","Article","article","sourceName","image","emptyImg","NewsEmpty","newsPage","handleClose","reason","Snackbar","open","autoHideDuration","onClose","Alert","severity","sx","News","articlesForNews","a","articlesInner","Main","props","main","path","element","Footer","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","RootReducer","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d448c82c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/header-logo.ad29cc75.png\";","import React from \"react\";\r\n\r\n\r\ntype ButtonPropsType = {\r\n    className: string\r\n    onClick: () => void\r\n    text: string\r\n\r\n}\r\n\r\n\r\nconst Button = React.memo(({className, onClick, text}: ButtonPropsType) => {\r\n\r\n    const onClickHandler = () => {\r\n        onClick();\r\n    }\r\n\r\n    return(\r\n        <button onClick={onClickHandler} className={className}>\r\n            {text}\r\n        </button>\r\n    )\r\n})\r\n\r\nexport default Button","import axios from \"axios\";\r\n\r\n\r\nexport type ArticleItemType = {\r\n    source: {\r\n        id: string\r\n        name: string\r\n    }\r\n    author: string\r\n    title: string\r\n    description: string\r\n    url: string\r\n    urlToImage: string\r\n    publishedAt: string\r\n    content: string\r\n}\r\n\r\nexport type NewsResponseType = {\r\n    status: string\r\n    totalResults: number\r\n    articles: Array<ArticleItemType>\r\n}\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0',\r\n    headers: {\r\n        \"API-KEY\": \"0c12297a-a516-42d3-9509-82bfb5d48238\",\r\n    },\r\n    withCredentials: true\r\n})\r\n\r\nexport const UsersApi = {\r\n    getUsers(usersCount: number, currentPage: number) {\r\n        return instance.get(`/users?count=${usersCount}&page=${currentPage}`, {})\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    followUser(userId: string) {\r\n        return instance.post(`/follow/${userId}`, {}, {})\r\n    },\r\n    unFollowUser(userId: string) {\r\n        return instance.delete(`/follow/${userId}`, {})\r\n    }\r\n}\r\n\r\nexport const ProfileApi = {\r\n    getProfile(paramsId: string | undefined) {\r\n        return instance.get(`/profile/${paramsId}`)\r\n    },\r\n    getStatus(paramsId: string | undefined) {\r\n        return instance.get(`/profile/status/${paramsId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    updateStatus(status: Object) {\r\n        return instance.put(`/profile/status`, {status})\r\n    }\r\n}\r\nexport const CommonApi = {\r\n    getDailyQuote(){\r\n        return axios.get(`https://animechan.vercel.app/api/random`)\r\n    }\r\n}\r\n\r\nexport const NewsApi = {\r\n    getNews(articlesCount: number, currentPage: number){\r\n        return axios.get<NewsResponseType>(`https://newsapi.org/v2/top-headlines?country=us&category=technology&pageSize=10&page=${currentPage}&apiKey=c0b099f14fff4628ae16e5c63887ae09`)\r\n    }\r\n}\r\n\r\nexport const AuthApi = {\r\n    authMe() {\r\n        return instance.get('/auth/me', {})\r\n    },\r\n    login(email:string, password: string, rememberMe = false) {\r\n        return instance.post(`/auth/login`, {email, password, rememberMe})\r\n    },\r\n    logOut(){\r\n        return instance.delete(`/auth/login`)\r\n    }\r\n}\r\n\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {AuthApi} from \"../DAL/api\";\r\n\r\nexport type AuthStateType = {\r\n    data: {\r\n        id: string\r\n        login: string\r\n        email: string\r\n\r\n    },\r\n    isAuth: boolean\r\n}\r\n\r\nconst initState = {\r\n    data: {\r\n        id: '',\r\n        login: '',\r\n        email: ''\r\n\r\n    },\r\n    isAuth: false\r\n}\r\n\r\n\r\nexport const authReducer = (state: AuthStateType = initState, action: authActionsType) => {\r\n    switch (action.type) {\r\n        case \"SET-AUTH-DATA\": {\r\n            return {\r\n                ...state,\r\n                data: {\r\n                    ...state.data,\r\n                    id: action.id,\r\n                    login: action.login,\r\n                    email: action.email\r\n                },\r\n                isAuth: action.isAuth\r\n\r\n            }\r\n        }\r\n        case \"SET-IS-LOGIN\": {\r\n            return {\r\n                ...state,\r\n                data: {\r\n                    ...state.data,\r\n                    id: action.id\r\n                }\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n//Actions\r\n\r\nexport type authActionsType = setIsLoginType | setAuthDataType;\r\n\r\nexport type setAuthDataType = ReturnType<typeof setAuthData>\r\n\r\nexport const setAuthData = (id: string | null, login: string | null, email: string | null, isAuth: boolean) => {\r\n    return {\r\n        type: 'SET-AUTH-DATA',\r\n        id,\r\n        login,\r\n        email,\r\n        isAuth\r\n    } as const\r\n}\r\n\r\nexport type setIsLoginType = ReturnType<typeof setIsLogin>\r\nexport const setIsLogin = (id: number) => {\r\n    return {\r\n        type: 'SET-IS-LOGIN',\r\n        id\r\n    } as const\r\n}\r\n\r\n//Thunk\r\n\r\nexport const setMyAuthData = () => {\r\n    return (dispatch: Dispatch) => {\r\n        AuthApi.authMe()\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    let {id, login, email} = response.data.data;\r\n                    dispatch(setAuthData(id, login, email, true))\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport const getIsLogin = (email: string, password: string, rememberMe: boolean) => {\r\n    return (dispatch: Dispatch) => {\r\n        AuthApi.login(email, password, rememberMe)\r\n            .then((response) => {\r\n                if (response.data.resultCode === 0) {\r\n                    // @ts-ignore\r\n                    dispatch(setMyAuthData())\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport const logOut = () => {\r\n    return (dispatch: Dispatch) => {\r\n        AuthApi.logOut()\r\n            .then((response) => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(setAuthData(null, null, null, false))\r\n                }\r\n            })\r\n    }\r\n}\r\n","import React, {useEffect} from \"react\";\r\nimport classes from \"./Header.module.css\";\r\nimport headerLogo from './headerImages/header-logo.png'\r\nimport Button from \"../Buttons/Button\";\r\nimport {AuthStateType, logOut, setMyAuthData} from \"../../BLL/auth-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootReducerType} from \"../../BLL/store\";\r\nimport {NavLink} from \"react-router-dom\";\r\nconst Header = React.memo(() => {\r\n\r\n    let authData = useSelector<RootReducerType, AuthStateType>(state => state.authPage)\r\n    let dispatch = useDispatch()\r\n\r\n    useEffect( () => {\r\n        dispatch(setMyAuthData())\r\n    } ,[dispatch] )\r\n\r\n    const onLogout = () => {\r\n        dispatch(logOut())\r\n    }\r\n    return(\r\n        <header>\r\n            <div className={classes.inner}>\r\n                <div className={classes.logoInner}>\r\n                    <NavLink to={'/profile'} className={classes.logo}>\r\n                        <img src={headerLogo} alt=\"header-logo\"/>\r\n                    </NavLink>\r\n                    <p>Lumos</p>\r\n                </div>\r\n                {/*<div className={classes.bigMenuSwitcher}>*/}\r\n                {/*    switcher*/}\r\n                {/*</div>*/}\r\n                {/*<ul className={classes.menu}>*/}\r\n                {/*    <li>*/}\r\n                {/*        <a href=\"#\">Home</a>*/}\r\n                {/*    </li>*/}\r\n                {/*    <li>*/}\r\n                {/*        <a href=\"#\">Features</a>*/}\r\n                {/*    </li>*/}\r\n                {/*    <li>*/}\r\n                {/*        <a href=\"#\">More</a>*/}\r\n                {/*    </li>*/}\r\n                {/*</ul>*/}\r\n                {/*<div className={classes.search}>*/}\r\n                {/*    <input type=\"search\"/>*/}\r\n                {/*</div>*/}\r\n                {authData.isAuth\r\n                    ?\r\n                    <div className={classes.loginButtons}>\r\n                        <p className={classes.userName}>Welcome {authData.data.login}</p>\r\n                        <Button className={'commonBtn'} onClick={onLogout} text={'Log out'}/>\r\n                    </div>\r\n                    :\r\n                    <Button className={'commonBtn'} onClick={()=>{} } text={'Login'}/>\r\n                }\r\n            </div>\r\n        </header>\r\n    )\r\n})\r\n\r\nexport default Header","export default __webpack_public_path__ + \"static/media/profile.9d4d5a29.svg\";","export default __webpack_public_path__ + \"static/media/messages.1bad7cf9.svg\";","export default __webpack_public_path__ + \"static/media/settings.627fc741.svg\";","export default __webpack_public_path__ + \"static/media/music.1bac8f02.svg\";","export default __webpack_public_path__ + \"static/media/users.e7baea37.svg\";","export default __webpack_public_path__ + \"static/media/news.04e09e6f.svg\";","import React from \"react\";\r\nimport classes from \"./Navbar.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport profileIcon from './images/profile.svg';\r\nimport messagesIcon from './images/messages.svg'\r\nimport settingIcon from './images/settings.svg'\r\nimport musicIcon from './images/music.svg'\r\nimport userIcon from './images/users.svg'\r\nimport newsIcon from './images/news.svg'\r\nconst Navbar = React.memo(() => {\r\n    return(\r\n        <nav className= {classes.navbar}>\r\n            <ul className={classes.menu}>\r\n                <li className={classes.item}>\r\n                    <NavLink to=\"/profile\" className={classes.link}>\r\n                        <img src={profileIcon} alt=\"profile\"/>\r\n                        Profile\r\n                    </NavLink>\r\n                </li>\r\n                <li className={classes.item}>\r\n                    <NavLink to=\"/news\" className={classes.link}>\r\n                        <img src={newsIcon} alt=\"news\"/>\r\n                        News\r\n                    </NavLink>\r\n                </li>\r\n                <li className={classes.item}>\r\n                    <NavLink to=\"/dialogs\" className={classes.link}>\r\n                        <img src={messagesIcon} alt=\"messages\"/>\r\n                        Messages\r\n                    </NavLink>\r\n                </li>\r\n                <li className={classes.item}>\r\n                    <NavLink to=\"/users\" className={classes.link}>\r\n                        <img src={userIcon} alt=\"users\"/>\r\n                        Users\r\n                    </NavLink>\r\n                </li>\r\n                <li className={classes.item}>\r\n                    <NavLink to=\"/daily-quote\" className={classes.link}>\r\n                        <img src={settingIcon} alt=\"daily-quote\"/>\r\n                        Daily Quote\r\n                    </NavLink>\r\n                </li>\r\n                <li className={classes.item}>\r\n                    <NavLink to=\"/music\" className={classes.link}>\r\n                        <img src={musicIcon} alt=\"music\"/>\r\n                        Music\r\n                    </NavLink>\r\n                </li>\r\n                {/*<li className={classes.item}>*/}\r\n                {/*    <NavLink to=\"/settings\" className={classes.link}>*/}\r\n                {/*        <img src={settingIcon} alt=\"settings\"/>*/}\r\n                {/*        Settings*/}\r\n                {/*    </NavLink>*/}\r\n                {/*</li>*/}\r\n            </ul>\r\n        </nav>\r\n    )\r\n})\r\n\r\nexport default Navbar","export default __webpack_public_path__ + \"static/media/profile-bg.c2555e70.png\";","import {Dispatch} from \"redux\";\r\nimport {ProfileApi} from \"../DAL/api\";\r\n\r\nexport type ProfilePageType = {\r\n    posts: Array<PostType>\r\n    profileInfo: ProfileInfo\r\n    newPostMessage: string\r\n    aboutUserInfo: UserType\r\n    userProfile: UserProfileType\r\n\r\n}\r\nexport type PostType = {\r\n    id: string\r\n    message: string\r\n    likesCounter: number\r\n}\r\nexport type ProfileInfo = {\r\n    postsNumber: number\r\n    friendsNumber: number\r\n    commentsNumber: number\r\n    // avatar: string\r\n    userName: string\r\n    membership: string\r\n    userStatus: string\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n}\r\nexport type UserType = {\r\n    userDescription: string\r\n    joinTime: string\r\n    userAddress: string\r\n}\r\nexport type UserProfileType = {\r\n        photos: {\r\n            small: string\r\n            large: string\r\n        }\r\n        fullName: string\r\n}\r\n\r\n\r\nconst initState: ProfilePageType = {\r\n    posts: [\r\n        {id: '1', message: 'Hello, i am Julian!', likesCounter: 22},\r\n        {id: '2', message: 'Hello, i am Lili!', likesCounter: 42},\r\n        {id: '3', message: 'Hello, i am Juliana!', likesCounter: 12}\r\n    ],\r\n    profileInfo: {\r\n        postsNumber: 10,\r\n        friendsNumber: 22,\r\n        commentsNumber: 15,\r\n        photos: {\r\n            small: '',\r\n            large: ''\r\n        },\r\n        // avatar: 'https://e7.pngegg.com/pngimages/1009/704/png-clipart-avatar-child-computer-icons-user-profile-smiling-boy-child-face-thumbnail.png',\r\n        userName: 'Julius Kenard',\r\n        membership: 'Pro Member',\r\n        userStatus: ''\r\n    },\r\n    userProfile: {\r\n        photos: {\r\n            small: '',\r\n            large: ''\r\n        },\r\n        fullName: 'Julius Kenard'\r\n    },\r\n    newPostMessage: 'He He suiii!',\r\n    aboutUserInfo: {\r\n        userDescription: 'Hi! My name is Julius but some people may know me as GameHunter! ' +\r\n            'I have a Twitch channel where I stream, play and review all the newest games.',\r\n        joinTime: 'September 23, 2020',\r\n        userAddress: 'Los Angeles, California'\r\n    }\r\n\r\n}\r\n\r\nconst profileReducer = (state: ProfilePageType = initState, action: GenericType) => {\r\n    switch (action.type) {\r\n        case \"UPDATE-POST-VALUE\": {\r\n            return {\r\n                ...state,\r\n                newPostMessage: action.newPostValue\r\n            }\r\n        }\r\n        case \"ADD-NEW-POST\": {\r\n            let newPost =  {id: '3', message: action.newValue, likesCounter: 12}\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostMessage: ''\r\n            }\r\n        }\r\n        case \"INCREASE-LIKES\": {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.map( p => action.postId === p.id ? {...p, likesCounter: action.likesCounter + 1 } : p )\r\n            }\r\n        }\r\n        case \"SET-USER-PROFILE\": {\r\n            return {\r\n                ...state,\r\n                userProfile: action.userProfile\r\n            }\r\n        }\r\n        case \"GET-USER-STATUS\": {\r\n            return {\r\n                ...state,\r\n                profileInfo: {\r\n                    ...state.profileInfo,\r\n                    userStatus: action.userStatus\r\n                }\r\n            }\r\n        }\r\n        case \"SET-USER-STATUS\": {\r\n            return {\r\n                ...state,\r\n                profileInfo: {\r\n                    ...state.profileInfo,\r\n                    userStatus: action.userStatus\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    return state\r\n}\r\n\r\nexport type GenericType = updateNewPostMessageACType | addNewPostACType | incLikesACType | setUserProfileType | getUserStatusType | changeUserStatusType;\r\n//Actions\r\nexport type updateNewPostMessageACType = ReturnType<typeof updateNewPostMessageAC>\r\nexport const updateNewPostMessageAC = (value: string) => {\r\n    return{\r\n        type: 'UPDATE-POST-VALUE',\r\n        newPostValue: value\r\n    }as const\r\n}\r\n\r\nexport type addNewPostACType = ReturnType<typeof addNewPostAC>\r\nexport const addNewPostAC = (newValue: string) => {\r\n    return{\r\n        type: 'ADD-NEW-POST',\r\n        newValue\r\n    } as const\r\n}\r\n\r\nexport type incLikesACType = ReturnType<typeof incLikesAC>\r\nexport const incLikesAC = (postId: string, likesCounter: number) => {\r\n    return{\r\n        type: 'INCREASE-LIKES',\r\n        postId,\r\n        likesCounter\r\n    } as const\r\n}\r\n\r\nexport type setUserProfileType = ReturnType<typeof setUserProfile>\r\nexport const setUserProfile = (userProfile: any) => {\r\n    return{\r\n        type: 'SET-USER-PROFILE',\r\n        userProfile\r\n    } as const\r\n}\r\n\r\nexport type getUserStatusType = ReturnType<typeof getUserStatus>\r\nexport const getUserStatus = (userStatus: any) => {\r\n    return{\r\n        type: 'GET-USER-STATUS',\r\n        userStatus\r\n    } as const\r\n}\r\n\r\nexport type  changeUserStatusType = ReturnType<typeof changeUserStatus>\r\nexport const changeUserStatus = (userStatus: Object) => {\r\n    return{\r\n        type: 'SET-USER-STATUS',\r\n        userStatus\r\n    } as const\r\n}\r\n\r\n//Thunk\r\n\r\nexport const setUSerProfile = (paramsId: string | undefined) => {\r\n    return (dispatch: Dispatch) => {\r\n        ProfileApi.getProfile(paramsId)\r\n            .then(response => {\r\n                dispatch(setUserProfile(response.data))\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const setUserStatus = (paramsId: string | undefined) => {\r\n   return (dispatch: Dispatch) => {\r\n       ProfileApi.getStatus(paramsId)\r\n           .then(response => {\r\n               dispatch(getUserStatus(response))\r\n           })\r\n   }\r\n}\r\n\r\nexport const updateUSerStatus = (status: Object) => {\r\n    return (dispatch: Dispatch) => {\r\n        ProfileApi.updateStatus(status)\r\n            .then( (response) => {\r\n                dispatch(changeUserStatus(response.status))\r\n            } )\r\n    }\r\n}\r\n\r\nexport default profileReducer","export default __webpack_public_path__ + \"static/media/youtube.54534ab2.svg\";","export default __webpack_public_path__ + \"static/media/twitch.ead2a3ae.svg\";","export default __webpack_public_path__ + \"static/media/tiktok.845f7c13.svg\";","export default __webpack_public_path__ + \"static/media/instagram.0b3e8a0c.svg\";","import React from \"react\";\r\nimport youTube from '../images/youtube.svg'\r\nimport twitch from '../images/twitch.svg'\r\nimport tiktok from  '../images/tiktok.svg'\r\nimport instagram from '../images/instagram.svg'\r\nimport classes from \"./SocialICons.module.css\";\r\nconst socialIcons = [\r\n    {icon: youTube},\r\n    {icon: twitch},\r\n    {icon: tiktok},\r\n    {icon: instagram}\r\n]\r\n\r\n\r\n\r\nconst SocialIcons = () => {\r\n    const socialIcon = socialIcons.map( i => {\r\n        return(\r\n            <a href=\"#\" className={classes.icon} >\r\n                <img  src={i.icon} alt=\"icon\" className={classes.iconImg}/>\r\n            </a>\r\n        )\r\n    } )\r\n    return(\r\n        <div className={classes.icons}>\r\n            {socialIcon}\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default SocialIcons","export default __webpack_public_path__ + \"static/media/crown.baa223b2.svg\";","export default __webpack_public_path__ + \"static/media/profile-avatar.e2b0c687.png\";","import React from \"react\";\r\nimport {incLikesAC, PostType, ProfilePageType} from \"../../../../BLL/profile-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootReducerType} from \"../../../../BLL/store\";\r\nimport classes from \"./MyPosts.module.css\";\r\nimport crownIcon from  './images/crown.svg'\r\nimport userAvatar from './../../../../images/profile-avatar.png'\r\n\r\n\r\nconst MyPosts = () => {\r\n    let posts = useSelector<RootReducerType, Array<PostType>>(state => state.profilePage.posts)\r\n    let profile = useSelector<RootReducerType, ProfilePageType>(state => state.profilePage)\r\n    let dispatch = useDispatch()\r\n    const onClickHandler = (postId: string, likesCounter: number) => {\r\n        dispatch(incLikesAC(postId, likesCounter))\r\n    }\r\n\r\n    let myPosts = posts.map( t => {\r\n        return(\r\n            <div key={t.id} id={t.id} className={classes.post}>\r\n                <div className={classes.info_line}>\r\n                    <div className={classes.avatar}>\r\n                        <img src={profile.userProfile.photos.small === null ? userAvatar : profile.userProfile.photos.small} alt=\"avatar\"/>\r\n                    </div>\r\n                    <p className={classes.message}>{t.message}</p>\r\n                </div>\r\n                <div className={classes.likesInner}>\r\n                    <button className={classes.likesBtn} onClick={()=>onClickHandler(t.id, t.likesCounter)}>\r\n                        <img src={crownIcon} alt=\"crown\" className={classes.crown}/>\r\n                    </button>\r\n                    <p className={classes.likesCount}>{t.likesCounter}</p>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    } )\r\n    return(\r\n        <div>\r\n            {myPosts}\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default React.memo(MyPosts)\r\n// export default MyPosts","import React, {ChangeEvent, useCallback} from \"react\";\r\nimport {addNewPostAC, updateNewPostMessageAC} from \"../../../BLL/profile-reducer\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport classes from \"./Posts.module.css\";\r\nimport Button from \"../../Buttons/Button\";\r\n\r\ntype PostsPropsType = {\r\n    newValue: string\r\n}\r\n\r\nconst Posts = React.memo(({newValue}: PostsPropsType) => {\r\n\r\n    let dispatch = useDispatch()\r\n    const addPostOnClickHandler = useCallback(() => {\r\n        if(newValue){\r\n            dispatch(addNewPostAC(newValue))\r\n        }\r\n    },[dispatch, newValue])\r\n    const onChangeHandler = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        dispatch(updateNewPostMessageAC(e.currentTarget.value))\r\n    },[dispatch])\r\n\r\n\r\n    return(\r\n        <div className={classes.posts}>\r\n            <h2 className={classes.title}>My Posts</h2>\r\n            <div>\r\n                <textarea\r\n                    value={newValue}\r\n                    onChange={onChangeHandler}\r\n                    className={classes.textarea}\r\n                />\r\n                <Button\r\n                    className={`commonBtn ${classes.btn}`}\r\n                    onClick={addPostOnClickHandler}\r\n                    text={'Add post'}\r\n                />\r\n                {/*<button onClick={addPostOnClickHandler}>Add post</button>*/}\r\n            </div>\r\n            <MyPosts/>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Posts","import React from \"react\";\r\nimport classes from \"./AboutMe.module.css\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootReducerType} from \"../../../../BLL/store\";\r\nimport {UserType} from \"../../../../BLL/profile-reducer\";\r\n\r\nconst AboutMe = () => {\r\n\r\n    let userInfo = useSelector<RootReducerType, UserType>(state => state.profilePage.aboutUserInfo)\r\n\r\n    return(\r\n        <div className={classes.inner}>\r\n            <h3 className={classes.title}>About Me</h3>\r\n            <div className={classes.line}>\r\n                <p className={classes.description}>{userInfo.userDescription}</p>\r\n            </div>\r\n            <div className={classes.line}>\r\n                <p>Joined</p>\r\n                <p>{userInfo.joinTime}</p>\r\n            </div>\r\n            <div className={classes.line}>\r\n                <p>Location</p>\r\n                <p>{userInfo.userAddress}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AboutMe","import React from \"react\";\r\nimport AboutMe from \"./AboutMe/AboutMe\";\r\n\r\nconst GeneralInfo = () => {\r\n    return(\r\n        <AboutMe/>\r\n    )\r\n}\r\n\r\nexport default GeneralInfo","import React from \"react\";\r\nimport classes from \"./AdditionalInfo.module.css\";\r\n\r\nconst AdditionalInfo = () => {\r\n    return(\r\n        <div className={classes.inner}>\r\n            <h3 className={classes.title}>Stream Box</h3>\r\n            <div className={classes.frame_wrapper}>\r\n                <iframe src=\"https://www.twitch.tv/videos/411305682\" frameBorder=\"0\"\r\n                        scrolling=\"no\" height=\"100%\" width=\"100%\" allowFullScreen={true} title={'twitch'}></iframe>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdditionalInfo","import React, {ChangeEvent, useCallback, useEffect} from \"react\";\r\nimport profileBg from './images/profile-bg.png'\r\nimport classes from \"./Profile.module.css\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootReducerType} from \"../../BLL/store\";\r\nimport {\r\n    ProfilePageType,\r\n    setUSerProfile,\r\n    setUserStatus, updateUSerStatus\r\n} from \"../../BLL/profile-reducer\";\r\nimport SocialIcons from \"./SocialIcon/SocialIcon\";\r\nimport Posts from \"./Posts/Posts\";\r\nimport GeneralInfo from \"./GeneralInfo/GeneralInfo\";\r\nimport AdditionalInfo from \"./AdditionalInfo/AdditionalInfo\";\r\nimport {Navigate, useParams} from \"react-router-dom\";\r\nimport userAvatar from './../../images/profile-avatar.png'\r\n\r\n\r\n\r\n\r\n\r\nconst Profile = React.memo(() => {\r\n    let profile = useSelector<RootReducerType, ProfilePageType>(state => state.profilePage)\r\n    // @ts-ignore\r\n    let isAuth = useSelector<RootReducerType, boolean>(state => state.authPage.isAuth)\r\n    let dispatch = useDispatch();\r\n    const [editMode, setEditMode] = React.useState(false)\r\n    const [inputTitle, setInputTitle] = React.useState(profile.profileInfo.userStatus)\r\n    let {id} = useParams();\r\n    if(!id){\r\n        id = '20604';\r\n    }\r\n    useEffect(() => {\r\n        dispatch(setUSerProfile(id))\r\n    }, [id, dispatch])\r\n    useEffect( () => {\r\n       dispatch(setUserStatus(id))\r\n    },[id, dispatch] )\r\n\r\n\r\n    const onSetEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const onExitEditMode = useCallback(() => {\r\n        setEditMode(false)\r\n        dispatch(updateUSerStatus(inputTitle))\r\n    },[dispatch, inputTitle])\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setInputTitle(e.currentTarget.value)\r\n    }\r\n    console.log(typeof profile.profileInfo.photos.large)\r\n    return (\r\n        !isAuth ?\r\n            <Navigate replace to=\"/login\" />\r\n            :\r\n        <section className={classes.inner}>\r\n            <div className={classes.header}>\r\n                <img src={profileBg} alt=\"profile-bg\" className={classes.bg}/>\r\n                <div className={classes.header_info}>\r\n                    <div className={classes.header_left}>\r\n                        <div className={classes.header_left_box}>\r\n                            <p>{profile.profileInfo.postsNumber}</p>\r\n                            <p>Posts</p>\r\n                        </div>\r\n                        <div className={classes.header_left_box}>\r\n                            <p>{profile.profileInfo.friendsNumber}</p>\r\n                            <p>Friends</p>\r\n                        </div>\r\n                        <div className={classes.header_left_box}>\r\n                            <p>{profile.profileInfo.commentsNumber}</p>\r\n                            <p>Comments</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.header_mid}>\r\n                        <div className={classes.header_mid_box}>\r\n                            <div className={classes.avatar_box}>\r\n                                <img src={profile.userProfile.photos.large === null ? userAvatar : profile.userProfile.photos.large} alt=\"avatar\" className={classes.avatar}/>\r\n                            </div>\r\n                            <p className={classes.userLevel}>4</p>\r\n                        </div>\r\n                        <p className={classes.userName}>{profile.userProfile.fullName}</p>\r\n                        <p className={classes.userMembership}>{profile.profileInfo.membership}</p>\r\n                        <div>\r\n                            {editMode\r\n                                ? <input value={inputTitle}\r\n                                         onBlur={onExitEditMode}\r\n                                         autoFocus={true}\r\n                                         onChange={onChangeHandler}\r\n                                />\r\n                                :  <p onDoubleClick={onSetEditMode}>{inputTitle || 'Enter your status'}</p>\r\n                            }\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className={classes.socialLinks}>\r\n                        <SocialIcons/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={classes.main_content}>\r\n                <GeneralInfo/>\r\n                <Posts newValue={profile.newPostMessage}/>\r\n                <AdditionalInfo/>\r\n            </div>\r\n\r\n        </section>\r\n    )\r\n})\r\n\r\nexport default Profile","import {Dispatch} from \"redux\";\r\nimport {UsersApi} from \"../DAL/api\";\r\n\r\nexport type UserPageType = {\r\n    users: Array<UsersType>\r\n    pagesNumber: number\r\n    usersCount: number\r\n    currentPage: number\r\n    totalCount: number\r\n    isFetching: boolean\r\n    isFollowed: Array<string>\r\n    s: boolean\r\n\r\n}\r\n\r\nexport type UsersType = {\r\n    id: string\r\n    name: string\r\n    message: string\r\n    location: {\r\n        country: string\r\n        city: string\r\n    }\r\n    followed: boolean\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n}\r\nconst initState: UserPageType = {\r\n    users: [],\r\n    pagesNumber: 10,\r\n    usersCount: 10,\r\n    currentPage: 2,\r\n    totalCount: 10,\r\n    isFetching: true,\r\n    isFollowed: [],\r\n    s: false\r\n}\r\n\r\n\r\n\r\nconst usersReducer = (state: UserPageType = initState, action: GenericType) => {\r\n    switch (action.type) {\r\n        case \"FOLLOW-USER\": {\r\n            return {\r\n                ...state,\r\n                users: state.users.map( u => u.id === action.userId ? {...u, followed: true} : u  )\r\n            }\r\n        }\r\n        case \"UNFOLLOW-USER\": {\r\n            return {\r\n                ...state,\r\n                users: state.users.map( u => u.id === action.userId ? {...u, followed: false} : u )\r\n            }\r\n        }\r\n        case \"SET-USERS\": {\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        }\r\n        case \"SET-TOTAL-USERS-COUNT\": {\r\n            return {\r\n                ...state,\r\n                totalCount: action.totalCount\r\n            }\r\n        }\r\n        case \"SET-CURRENT-PAGE\": {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n        case \"SET-PRELOADER\": {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case \"SET-IS-FOLLOWED\": {\r\n            return {\r\n                ...state,\r\n                isFollowed: action.s\r\n                    ? [...state.isFollowed, action.userId]\r\n                    : [...state.isFollowed.filter(id => id !== action.userId)]\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\n\r\ntype GenericType = followUserACType | unfollowUserACType | setUsersACType\r\n    | setTotalUsersCountType | setCurrentPageType | setISFetchingType | setISFollowedType;\r\n\r\n// Actions\r\nexport type followUserACType = ReturnType<typeof followUserAC>\r\nexport const followUserAC = (userId: string) => {\r\n    return{\r\n        type: 'FOLLOW-USER',\r\n        userId\r\n    } as const\r\n}\r\n\r\nexport type unfollowUserACType = ReturnType<typeof unfollowUserAC>\r\nexport const unfollowUserAC = (userId: string) => {\r\n    return{\r\n        type: 'UNFOLLOW-USER',\r\n        userId\r\n    } as const\r\n}\r\n\r\nexport type setUsersACType = ReturnType<typeof setUsersAC>\r\nexport const setUsersAC = (users: Array<UserPageType>) => {\r\n    return{\r\n        type: 'SET-USERS',\r\n        users\r\n    } as const\r\n}\r\n\r\nexport type setTotalUsersCountType = ReturnType<typeof setTotalUsersCount>\r\nexport const setTotalUsersCount = (totalCount: number) => {\r\n    return{\r\n        type: 'SET-TOTAL-USERS-COUNT',\r\n        totalCount\r\n    } as const\r\n}\r\n\r\nexport type setCurrentPageType = ReturnType<typeof setCurrentPage>\r\nexport const setCurrentPage = (currentPage: number) => {\r\n    return{\r\n        type: 'SET-CURRENT-PAGE',\r\n        currentPage\r\n    } as const\r\n}\r\n\r\nexport type setISFetchingType = ReturnType<typeof setISFetching>\r\nexport const setISFetching = (isFetching: boolean) => {\r\n    return{\r\n        type: 'SET-PRELOADER',\r\n        isFetching\r\n    } as const\r\n}\r\n\r\nexport type setISFollowedType = ReturnType<typeof setISFollowed>\r\nexport const setISFollowed = (s: boolean, userId: string) => {\r\n    return{\r\n        type: 'SET-IS-FOLLOWED',\r\n        s,\r\n        userId\r\n    } as const\r\n}\r\n\r\n// Thunk\r\nexport const getUsers = (usersCount: number, currentPage: number) => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(setCurrentPage(currentPage))\r\n        dispatch(setISFetching(true))\r\n        UsersApi.getUsers(usersCount, currentPage)\r\n            .then(response => {\r\n                dispatch(setUsersAC(response.items))\r\n                dispatch(setISFetching(false))\r\n            })\r\n    }\r\n}\r\n\r\nexport const followUser = (userId: string) => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(setISFollowed(true, userId))\r\n        UsersApi.followUser(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(followUserAC(userId))\r\n                    dispatch(setISFollowed(false, userId))\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport const unFollowUser = (userId: string) => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(setISFollowed(true, userId))\r\n        UsersApi.unFollowUser(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(unfollowUserAC(userId))\r\n                    dispatch(setISFollowed(false, userId))\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport default usersReducer","export default __webpack_public_path__ + \"static/media/preloader.4ccf66d6.gif\";","import React from \"react\";\r\nimport preloaderImg from '../../images/preloader.gif'\r\nimport classes from './Preloader.module.scss'\r\n\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className={classes.inner}>\r\n            <div className={classes.block}>\r\n                <img src={preloaderImg} alt=\"preloader\" className={classes.img}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader","import React from \"react\";\r\nimport classes from \"../Users.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport SocialIcons from \"../../Profile/SocialIcon/SocialIcon\";\r\nimport {UsersType} from \"../../../BLL/users-reducer\";\r\nimport userAvatar from './../../../images/profile-avatar.png'\r\n\r\ntype UserPropsType = {\r\n    user: UsersType\r\n    userIsFollowed: Array<string>\r\n    onClickUnfollowHandler: (userId: string) => void\r\n    onClickFollowHandler: (userId: string) => void\r\n}\r\n\r\nconst User = React.memo(({user, userIsFollowed, onClickFollowHandler, onClickUnfollowHandler,  ...props}: UserPropsType) => {\r\n    console.log('user')\r\n    return(\r\n        <div key={user.id} id={user.id} className={classes.user}>\r\n            <div className={classes.avatar}>\r\n                <img src={user.photos.small === null ? userAvatar : user.photos.small} alt=\"avatar\"/>\r\n            </div>\r\n            <NavLink to={'/profile/' + user.id} className={classes.visitUser}>\r\n                <h4 className={classes.userName}>{user.name}</h4>\r\n            </NavLink>\r\n\r\n            <p>{user.message}</p>\r\n            {user.followed\r\n                ? <button disabled={userIsFollowed.some(id => id === user.id)}\r\n                          onClick={() => onClickUnfollowHandler(user.id)} className={classes.userBtn}>Unfollow</button>\r\n                : <button disabled={userIsFollowed.some(id => id === user.id)}\r\n                          onClick={() => onClickFollowHandler(user.id)} className={classes.userBtn}>Follow</button>\r\n            }\r\n            <SocialIcons/>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default User","import React, { useCallback, useEffect} from \"react\";\r\nimport classes from \"./Users.module.css\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootReducerType} from \"../../BLL/store\";\r\nimport {followUser, getUsers, unFollowUser, UserPageType} from \"../../BLL/users-reducer\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\nimport User from \"./User/User\";\r\nimport { Pagination } from \"@material-ui/core\";\r\n\r\n\r\nconst Users = React.memo(() => {\r\n    console.log('users')\r\n    let dispatch = useDispatch()\r\n\r\n    const usersPage = useSelector<RootReducerType, UserPageType>(state => state.usersPage)\r\n    // @ts-ignore\r\n    let isAuth = useSelector<RootReducerType, boolean>(state => state.authPage.isAuth)\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getUsers(usersPage.usersCount, usersPage.currentPage))\r\n    }, [dispatch, usersPage.usersCount, usersPage.currentPage])\r\n\r\n\r\n\r\n    const onPageChange = useCallback((event: React.ChangeEvent<unknown>, page: number) => {\r\n        dispatch(getUsers(usersPage.usersCount, page))\r\n    },[dispatch, usersPage.usersCount])\r\n\r\n\r\n    const onClickUnfollowHandler = useCallback((userId: string) => {\r\n        dispatch(unFollowUser(userId))\r\n    },[dispatch])\r\n\r\n    const onClickFollowHandler = useCallback((userId: string) => {\r\n        dispatch(followUser(userId))\r\n    },[dispatch])\r\n\r\n\r\n    let users = usersPage.users.map(u => {\r\n        return (\r\n            <User\r\n                user={u}\r\n                userIsFollowed={usersPage.isFollowed}\r\n                onClickUnfollowHandler={onClickUnfollowHandler}\r\n                onClickFollowHandler={onClickFollowHandler}\r\n            />\r\n        )\r\n    })\r\n\r\n\r\n\r\n    return(\r\n        !isAuth ?\r\n            <Navigate replace to=\"/login\" />\r\n            :\r\n        <section className={classes.users}>\r\n            {usersPage.isFetching ? <Preloader/> : null}\r\n            <div className={classes.users_inner}>\r\n                <div className={classes.pagination}>\r\n                    {/*{pagination}*/}\r\n                    <Pagination\r\n                        count={usersPage.pagesNumber}\r\n                        color=\"secondary\"\r\n                        page={usersPage.currentPage}\r\n                        onChange={onPageChange}\r\n                        size={'large'}\r\n                    />\r\n                </div>\r\n                <div className={classes.users_elements}>\r\n                    {users}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n})\r\n\r\nexport default Users","import React from \"react\";\r\nimport {Formik} from \"formik\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {getIsLogin} from \"../../../BLL/auth-reducer\";\r\nimport s from './LoginForm.module.css'\r\n\r\n\r\nconst initialValues = {\r\n    email: \"\",\r\n    password: \"\"\r\n};\r\n\r\n\r\nconst submitForm = (values: any) => {\r\n    console.log(values);\r\n};\r\n\r\nconst LoginForm = React.memo(() => {\r\n    let dispatch = useDispatch()\r\n    const [disabled, setDisabled] = React.useState(false)\r\n    const validate = (values: any) => {\r\n        let errors = {\r\n            email: undefined\r\n        };\r\n        const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\r\n\r\n        if (!values.email) {\r\n            // @ts-ignore\r\n            errors.email = \"Email is required\";\r\n            setDisabled(true)\r\n        } else if (!regex.test(values.email)) {\r\n            // @ts-ignore\r\n            errors.email = \"Invalid Email\";\r\n            setDisabled(true)\r\n        }\r\n\r\n        if (!values.password) {\r\n            // @ts-ignore\r\n            errors.password = \"Password is required\";\r\n            setDisabled(true)\r\n        } else if (values.password.length < 4) {\r\n            // @ts-ignore\r\n            errors.password = \"Password too short\";\r\n            setDisabled(true)\r\n        }\r\n\r\n\r\n        return errors;\r\n    };\r\n\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={initialValues}\r\n            validate={validate}\r\n            onSubmit={submitForm}\r\n        >\r\n            {(formik) => {\r\n                const {\r\n                    values,\r\n                    handleChange,\r\n                    handleSubmit,\r\n                    errors,\r\n                    touched,\r\n                    handleBlur,\r\n                } = formik;\r\n                const onLoginHandler = () => {\r\n                    dispatch(getIsLogin(values.email, values.password, true))\r\n                }\r\n\r\n                return (\r\n                    <div className={s.container}>\r\n                        <h1 className={s.title}>Sign in to continue</h1>\r\n                        <form onSubmit={handleSubmit} className={s.form}>\r\n                            <div className={s.formRow}>\r\n                                <div className={s.formLine}>\r\n                                    <label htmlFor=\"email\" className={s.formLabel}>Email</label>\r\n                                    <input\r\n                                        type=\"email\"\r\n                                        name=\"email\"\r\n                                        id=\"email\"\r\n                                        value={values.email}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        className={\r\n                                            errors.email && touched.email ? s.inputError : s.input\r\n                                        }\r\n                                    />\r\n                                    {errors.email && touched.email && (\r\n                                        <span className={s.error}>{errors.email}</span>\r\n                                    )}\r\n                                </div>\r\n                                <div className={s.formLine}>\r\n                                    <label htmlFor=\"password\" className={s.formLabel}>Password</label>\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        name=\"password\"\r\n                                        id=\"password\"\r\n                                        value={values.password}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        className={\r\n                                            errors.password && touched.password ? s.inputError : s.input\r\n                                        }\r\n                                    />\r\n                                    {errors.password && touched.password && (\r\n                                        <span className={s.error}>{errors.password}</span>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                            <button\r\n                                type=\"submit\"\r\n                                className={!disabled ? `${s.disabledBtn} + ${s.btn}` : s.btn}\r\n                                disabled={errors ? !disabled : disabled}\r\n                                onClick={onLoginHandler}\r\n                            >\r\n                                Sign In\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n                );\r\n            }}\r\n        </Formik>\r\n    );\r\n})\r\n\r\nexport default LoginForm;","import React from \"react\";\r\nimport LoginForm from \"./LoginForm/LoginForm\";\r\nimport classes from \"./Login.module.scss\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootReducerType} from \"../../BLL/store\";\r\nimport {Navigate} from \"react-router-dom\";\r\n\r\n\r\nconst Login = () => {\r\n\r\n    // @ts-ignore\r\n    const isAuth = useSelector<RootReducerType, boolean>(state => state.authPage.isAuth)\r\n\r\n\r\n    return (\r\n        isAuth\r\n            ? <Navigate replace to=\"/profile\"/>\r\n            :\r\n            <div className={classes.inner}>\r\n                <LoginForm/>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Login","import {Dispatch} from \"redux\";\r\nimport {CommonApi} from \"../DAL/api\";\r\n\r\ntype setDailyQuoteType = ReturnType<typeof setDailyQuote>\r\ntype setQuoteIsFetchingType = ReturnType<typeof setQuoteIsFetching>\r\n\r\ntype GenericType = setDailyQuoteType | setQuoteIsFetchingType;\r\ntype initStateType = {\r\n    quote: string\r\n    isFetching: boolean\r\n}\r\n\r\nconst initState = {\r\n    quote: '',\r\n    isFetching: false\r\n}\r\n\r\nexport const dailyQuoteReducer = (state: initStateType = initState, action: GenericType) => {\r\n    switch (action.type) {\r\n        case \"SET-QUOTE\": {\r\n            return {\r\n                ...state,\r\n                quote: action.quote\r\n            }\r\n        }\r\n        case \"SET-QUOTE-IS-FETCHING\": {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const setDailyQuote = (quote: string) => {\r\n    return{\r\n        type: 'SET-QUOTE',\r\n        quote\r\n    } as const\r\n}\r\n\r\nexport const setQuoteIsFetching = (isFetching: boolean) => {\r\n    return{\r\n        type: 'SET-QUOTE-IS-FETCHING',\r\n        isFetching\r\n    } as const\r\n}\r\n\r\nexport const getDailyQuote = () => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(setQuoteIsFetching(true))\r\n        CommonApi.getDailyQuote()\r\n            .then((response) => {\r\n                console.log(response.data.quote)\r\n                dispatch(setQuoteIsFetching(false))\r\n                dispatch(setDailyQuote(response.data.quote))\r\n            })\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/q.6adffa40.jpg\";","import React, {useCallback, useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getDailyQuote} from \"../../BLL/daily-quote-reducer\";\r\nimport {RootReducerType} from \"../../BLL/store\";\r\nimport Button from \"../Buttons/Button\";\r\nimport classes from \"./DailyQuote.module.scss\";\r\nimport quoteBg from './../../images/q.jpg'\r\nimport Preloader from \"../Preloader/Preloader\";\r\n\r\nconst DailyQuote = React.memo(() => {\r\n    const dispatch = useDispatch()\r\n    const quote = useSelector<RootReducerType, string>(state => state.dailyQuotePage.quote)\r\n    const isFetching = useSelector<RootReducerType, boolean>(state => state.dailyQuotePage.isFetching)\r\n\r\n\r\n    useEffect( () => {\r\n        dispatch(getDailyQuote())\r\n    },[dispatch] )\r\n\r\n    const onGetQuote = useCallback(() => {\r\n        dispatch(getDailyQuote())\r\n    },[dispatch])\r\n\r\n    return(\r\n        <section className={classes.inner}>\r\n            {isFetching ? <Preloader/> : null}\r\n            <div className={classes.quoteInner}>\r\n                <div className={classes.quote}>\r\n                    <p className={classes.quoteText}>{quote}</p>\r\n                    <Button onClick={onGetQuote} className={'commonBtn'} text={'Get your daily quote'}/>\r\n                </div>\r\n                <img src={quoteBg} alt=\"background\" className={classes.bg}/>\r\n            </div>\r\n        </section>\r\n    )\r\n})\r\n\r\nexport default DailyQuote","import {ArticleItemType, NewsApi} from \"../DAL/api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\nexport type NewsInitStateType = {\r\n    articles: Array<ArticleItemType>\r\n    totalResults: number\r\n    currentPage: number\r\n    articlesCount: number\r\n    isFetching: boolean\r\n    isSuccess: boolean | null\r\n    warning: boolean\r\n}\r\n\r\nconst initState = {\r\n    articles: [\r\n        {\r\n            author: \"Kerrie Hughes\",\r\n            content: \"2021-12-27T10:15:08.991Z\\r\\n(Image credit: Nintendo)\\r\\nMorning everyone! Do you wish it could be Christmas every day? Well it kind of is, with today being the official substitute day for Christmas Day i… [+11015 chars]\",\r\n            description: \"The best deals on Nintendo Switch, games and accessories.\",\r\n            publishedAt: \"2021-12-27T08:17:11Z\",\r\n            source: {id: '', name: \"Creative Bloq\"},\r\n            title: \"Nintendo Switch after Christmas sales live blog: the best Nintendo Switch deals live now - Creative Bloq\",\r\n            url: \"https://www.creativebloq.com/news/live/nintendo-switch-boxing-day-deals\",\r\n            urlToImage: \"https://cdn.mos.cms.futurecdn.net/daVy7d593wadBE4FPTuDTa-1200-80.jpg\"\r\n        },\r\n        {\r\n            author: \"Liam Doolan\",\r\n            content: \"Dragon Quest X Offline for Nintendo Switch was due to arrive in Japan on 26th February next year, but it's now the latest game to delayed.\\r\\nThe title will now launch in Summer 2022, and the DLC expan… [+589 chars]\",\r\n            description: \"The team wants it to be the best experience possible\",\r\n            publishedAt: \"2021-12-27T03:45:00Z\",\r\n            source: {id: '', name: \"Nintendo Life\"},\r\n            title: \"Dragon Quest X Offline Has Been Delayed Until Summer 2022 - Nintendo Life\",\r\n            url: \"https://www.nintendolife.com/news/2021/12/dragon-quest-x-offline-has-been-delayed-until-summer-2022\",\r\n            urlToImage: \"https://images.nintendolife.com/8556368c22c93/1280x720.jpg\"\r\n        },\r\n        {\r\n            author: \"Adam Bankhurst\",\r\n            content: \"Square Enix has confirmed that, due to the ongoing COVID-19 pandemic, Final Fantasy 16's development has been delayed by \\\"almost a half year\\\" and the next big reveal will not take place until Spring … [+3173 chars]\",\r\n            description: \"Square Enix has confirmed that, due to the ongoing COVID-19 pandemic, Final Fantasy 16's development has been delayed by \\\"almost a half year\\\" and the next big reveal will not take place until Spring 2022.\",\r\n            publishedAt: \"2021-12-27T05:48:45Z\",\r\n            source: {id: \"ign\", name: \"IGN\"},\r\n            title: \"Final Fantasy 16's Development Delayed by 'Almost a Half Year,' Big Reveal Will Take Place in Spring 2022 - IGN - IGN\",\r\n            url: \"https://www.ign.com/articles/final-fantasy-16-development-delayed-by-almost-half-a-year-big-reveal-will-take-place-in-spring-2022\",\r\n            urlToImage: \"https://assets-prd.ignimgs.com/2021/12/27/ff16-poster-1603968298410-1640583091711.jpg?width=1280\"\r\n        },\r\n        {\r\n            author: \"Alan Friedman\",\r\n            content: \"This is our new notification center.\\r\\n Inside, you will find updates on the most important things happening right now.\\r\\nGot it\",\r\n            description: \"Google is asking Pixel 6 users to help it test a fix for a bug that causes the new handsets to lose connectivity with users' cellular providers.\",\r\n            publishedAt: \"2021-12-26T22:44:01Z\",\r\n            source: {id: '', name: \"PhoneArena\"},\r\n            title: \"Google asks 5G Pixel 6 users to help it test a fix for the connectivity bug - PhoneArena\",\r\n            url: \"https://www.phonearena.com/news/google-tests-fix-for-5g-pixel-6-connectivity-bug_id137417\",\r\n            urlToImage: \"https://m-cdn.phonearena.com/images/article/137417-wide-two_1200/Google-asks-5G-Pixel-6-users-to-help-it-test-a-fix-for-the-connectivity-bug.jpg\"\r\n        }\r\n    ],\r\n    totalResults: 0,\r\n    currentPage: 1,\r\n    articlesCount: 10,\r\n    isFetching: false,\r\n    isSuccess: null,\r\n    warning: true\r\n}\r\n\r\nexport const newsReducer = (state: NewsInitStateType = initState, action: GenericActionType) => {\r\n    switch (action.type) {\r\n        case \"NEWS/SET-NEWS-STATE\": {\r\n            return {\r\n                ...state,\r\n                articles: action.articles\r\n            }\r\n        }\r\n        case \"NEWS/SET-NEWS-TOTAL-ITEMS\": {\r\n            return {\r\n                ...state,\r\n                totalResults: action.itemsCount\r\n            }\r\n        }\r\n        case \"NEWS/SET-NEWS-CURRENT-PAGE\": {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n        case \"NEWS/SET-NEWS-IS-FETCHING\": {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case \"NEWS/SET-NEWS-RESPONSE-SUCCESS\":{\r\n            return {\r\n                ...state,\r\n                isSuccess: action.isSuccess\r\n            }\r\n        }\r\n        case \"NEWS/SET-NEWS-WARNING\": {\r\n            return {\r\n                ...state,\r\n                warning: action.warning\r\n            }\r\n        }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype GenericActionType = setNewsStateType\r\n    | setNewsTotalItemsType\r\n    | setNewsCurrentPage\r\n    | setNewsIsFetchingType\r\n    | setNewsResponseSuccessType\r\n    | setNewsWarningType;\r\n\r\ntype setNewsStateType = ReturnType<typeof setNewsState>\r\n\r\ntype setNewsTotalItemsType = ReturnType<typeof setNewsTotalItems>\r\n\r\ntype setNewsCurrentPage = ReturnType<typeof setNewsCurrentPage>\r\n\r\ntype setNewsIsFetchingType = ReturnType<typeof setNewsIsFetching>\r\n\r\ntype setNewsResponseSuccessType = ReturnType<typeof setNewsResponseSuccess>\r\n\r\ntype setNewsWarningType = ReturnType<typeof setNewsWarning>\r\n\r\nexport const setNewsState = (articles: Array<ArticleItemType>) => {\r\n    return {\r\n        type: 'NEWS/SET-NEWS-STATE',\r\n        articles\r\n    } as const\r\n}\r\n\r\n\r\nexport const setNewsTotalItems = (itemsCount: number) => {\r\n    return {\r\n        type: 'NEWS/SET-NEWS-TOTAL-ITEMS',\r\n        itemsCount\r\n    } as const\r\n}\r\n\r\nexport const setNewsCurrentPage = (currentPage: number) => {\r\n    return {\r\n        type: 'NEWS/SET-NEWS-CURRENT-PAGE',\r\n        currentPage\r\n    } as const\r\n}\r\n\r\nexport const setNewsIsFetching = (isFetching: boolean) => {\r\n    return {\r\n        type: 'NEWS/SET-NEWS-IS-FETCHING',\r\n        isFetching\r\n    } as const\r\n}\r\n\r\nexport const setNewsResponseSuccess = (isSuccess: boolean) => {\r\n    return{\r\n        type: 'NEWS/SET-NEWS-RESPONSE-SUCCESS',\r\n        isSuccess\r\n    } as const\r\n}\r\n\r\nexport const setNewsWarning = (warning: boolean) => {\r\n    return{\r\n        type: 'NEWS/SET-NEWS-WARNING',\r\n        warning\r\n    } as const\r\n}\r\n\r\nexport const getNewsState = (articlesCount: number, currentPage: number) => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(setNewsCurrentPage(currentPage))\r\n        dispatch(setNewsIsFetching(true))\r\n        NewsApi.getNews(articlesCount, currentPage)\r\n            .then((response) => {\r\n                if (response.status === 200){\r\n                    console.log(response.data.articles)\r\n                    dispatch(setNewsResponseSuccess(true))\r\n                    dispatch(setNewsState(response.data.articles))\r\n                    dispatch(setNewsTotalItems(response.data.totalResults))\r\n                }\r\n            })\r\n            .catch(()=>{\r\n                dispatch(setNewsResponseSuccess(false))\r\n            })\r\n            .finally(()=> {\r\n                dispatch(setNewsIsFetching(false))\r\n            })\r\n    }\r\n}\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/profile-bg.c2555e70.png\";","import React from \"react\";\r\nimport {ArticleItemType} from \"../../../DAL/api\";\r\nimport s from './Article.module.scss'\r\nimport emptyImg from './../../../images/profile-bg.png'\r\n\r\ntype ArticlePropsType = {\r\n    article: ArticleItemType\r\n}\r\n\r\nexport const Article = React.memo(({article}: ArticlePropsType) => {\r\n    return(\r\n        <a href={article.url} className={s.article}>\r\n            <h2 className={s.title}>{article.title}</h2>\r\n            <p className={s.sourceName}>{article.source.name}</p>\r\n            <div className={s.image}>\r\n                <img src={article.urlToImage ? article.urlToImage : emptyImg} alt=\"article-img\"/>\r\n            </div>\r\n            <p className={s.description}>{article.description}</p>\r\n        </a>\r\n    )\r\n})\r\n\r\nexport default Article","import React, {useCallback, useEffect} from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Alert from \"@material-ui/core/Alert\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootReducerType} from \"../../../BLL/store\";\r\nimport {NewsInitStateType, setNewsWarning} from \"../../../BLL/news-reducer\";\r\n\r\nconst NewsEmpty = React.memo(() => {\r\n    const warning = useSelector<RootReducerType, boolean | null>((state) => state.newsPage.warning)\r\n    const articles = useSelector<RootReducerType, NewsInitStateType>(state => state.newsPage)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    useEffect(() => {\r\n        if (articles.isSuccess === false) {\r\n            dispatch(setNewsWarning(true))\r\n        }\r\n    }, [dispatch, articles.isSuccess])\r\n\r\n\r\n    const handleClose = useCallback((event?: React.SyntheticEvent, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        dispatch(setNewsWarning(false))\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div>\r\n            <Snackbar open={warning === true} autoHideDuration={60000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"warning\" sx={{width: '100%'}}>\r\n                    This page is available with pagination and normally working API only on localhost, because\r\n                    using News API on other ports than localhost\r\n                    is costing 500$ per month, which is quite expensive for test project. Please download it on your\r\n                    local PC, if you want to check how this page normally works\r\n                    otherwise you can look only at some items from this page and how they are looking on project. Sorry\r\n                    for the inconvenience.\r\n                </Alert>\r\n            </Snackbar>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default NewsEmpty","import React, {useCallback, useEffect} from \"react\";\r\nimport {getNewsState, NewsInitStateType} from \"../../BLL/news-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootReducerType} from \"../../BLL/store\";\r\nimport Article from \"./Article/Article\";\r\nimport s from './News.module.scss'\r\nimport {Pagination} from \"@material-ui/core\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\nimport NewsEmpty from \"./NewsEmpty/NewsEmpty\";\r\n\r\nconst News = React.memo(() => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const articles = useSelector<RootReducerType, NewsInitStateType>(state => state.newsPage)\r\n\r\n    useEffect(() => {\r\n        dispatch(getNewsState(articles.totalResults, articles.currentPage))\r\n    }, [dispatch, articles.totalResults, articles.currentPage])\r\n\r\n    const onPageChange = useCallback((event: React.ChangeEvent<unknown>, page: number) => {\r\n        dispatch(getNewsState(articles.totalResults, page))\r\n    }, [dispatch, articles.totalResults])\r\n\r\n    const articlesForNews = articles.articles.map(a => {\r\n        return (\r\n            <Article article={a}/>\r\n        )\r\n    })\r\n\r\n\r\n    return (\r\n        <section className={s.inner}>\r\n            {articles.isFetching ? <Preloader/> : null}\r\n            <div className={s.articlesInner}>\r\n                <div className={s.pagination}>\r\n                    <Pagination\r\n                        count={articles.totalResults / 10}\r\n                        color=\"secondary\"\r\n                        page={articles.currentPage}\r\n                        onChange={onPageChange}\r\n                        size={'large'}\r\n                    />\r\n                </div>\r\n                <div className={s.articles}>\r\n                    {articlesForNews}\r\n                    {!articles.isSuccess ? <NewsEmpty/> : null}\r\n                </div>\r\n            </div>\r\n\r\n        </section>\r\n    )\r\n})\r\n\r\nexport default News","import React from \"react\";\r\nimport {Navigate, Route, Routes} from \"react-router-dom\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport Profile from \"../Profile/Profile\";\r\nimport Users from \"../Users/Users\";\r\nimport Login from \"../Login/Login\";\r\nimport DailyQuote from \"../DailyQuote/DailyQuote\";\r\nimport News from \"../News/News\";\r\nimport classes from \"./Main.module.css\";\r\n\r\n\r\nconst Main = React.memo((props: any) => {\r\n\r\n    return(\r\n        <main className={classes.main}>\r\n            <Navbar/>\r\n\r\n            <Routes>\r\n                <Route path={'/kid-social-network'} element={<Navigate to={'/profile'}/>}/>\r\n                <Route path={'/profile'} element={<Profile/>}/>\r\n                <Route path={'/profile/:id'} element={<Profile/>}/>\r\n                <Route path={'/news'} element={<News/>}/>\r\n                <Route path={'/users'} element={<Users/>}/>\r\n                <Route path={'/login'} element={<Login/>}/>\r\n                <Route path={'/daily-quote'} element={<DailyQuote/>}/>\r\n            </Routes>\r\n        </main>\r\n    )\r\n})\r\n\r\nexport default Main","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n    return(\r\n        <footer>\r\n\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from 'react';\nimport './App.css';\nimport Header from \"./Components/Header/Header\";\nimport Main from \"./Components/Main/Main\";\nimport Footer from \"./Components/Footer/Footer\";\n\nfunction App() {\n    return (\n      <>\n          <div className=\"App\">\n              <Header/>\n              <Main/>\n              <Footer/>\n\n          </div>\n      </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import profileReducer from \"./profile-reducer\";\r\nimport {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {authReducer} from \"./auth-reducer\";\r\nimport {dailyQuoteReducer} from \"./daily-quote-reducer\";\r\nimport {newsReducer} from \"./news-reducer\";\r\n\r\nconst RootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    usersPage: usersReducer,\r\n    authPage: authReducer,\r\n    dailyQuotePage: dailyQuoteReducer,\r\n    newsPage: newsReducer\r\n})\r\n\r\n\r\nexport let store = createStore(RootReducer, applyMiddleware(thunkMiddleware))\r\n\r\nexport type  RootReducerType = ReturnType<typeof store.getState>\r\n//@ts-ignore\r\nconsole.log(window.store = store)\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./BLL/store\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <BrowserRouter>\n          <Provider store={store}>\n              <App />\n          </Provider>\n      </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inner\":\"Profile_inner__1nBlQ\",\"header\":\"Profile_header__y6y_p\",\"header_info\":\"Profile_header_info__2Gcfx\",\"bg\":\"Profile_bg__vxBlz\",\"header_left\":\"Profile_header_left__3NdnI\",\"header_left_box\":\"Profile_header_left_box__3NGcU\",\"header_mid\":\"Profile_header_mid__3UG6t\",\"avatar_box\":\"Profile_avatar_box__13SX-\",\"avatar\":\"Profile_avatar__15YLN\",\"header_mid_box\":\"Profile_header_mid_box__220L7\",\"userName\":\"Profile_userName__ZGJI1\",\"userMembership\":\"Profile_userMembership__1UXNa\",\"userLevel\":\"Profile_userLevel__1dLj-\",\"socialLinks\":\"Profile_socialLinks__FbCpO\",\"main_content\":\"Profile_main_content__2PGwM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LoginForm_container__2qdIi\",\"title\":\"LoginForm_title__2fhRQ\",\"formLine\":\"LoginForm_formLine__2cdoI\",\"form\":\"LoginForm_form__1wa08\",\"formLabel\":\"LoginForm_formLabel__21WOD\",\"btn\":\"LoginForm_btn__1b1Et\",\"input\":\"LoginForm_input__1bLUW\",\"inputError\":\"LoginForm_inputError__mfxHu\",\"error\":\"LoginForm_error__2NE7K\",\"disabledBtn\":\"LoginForm_disabledBtn__3b1hK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__1glNI\",\"menu\":\"Navbar_menu__3aw_d\",\"item\":\"Navbar_item__2I03I\",\"link\":\"Navbar_link__16QFG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__14ed9\",\"users_inner\":\"Users_users_inner__2V3vh\",\"users_elements\":\"Users_users_elements__1AS6N\",\"user\":\"Users_user__27-ZE\",\"avatar\":\"Users_avatar__27oSH\",\"userName\":\"Users_userName__3lIfx\",\"userBtn\":\"Users_userBtn__1XLsV\",\"pagination\":\"Users_pagination__3zU3m\",\"activePaginationBtn\":\"Users_activePaginationBtn__1Yy5M\",\"paginationBtn\":\"Users_paginationBtn__1-ZMW\",\"visitUser\":\"Users_visitUser__25A1Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"MyPosts_post__2juG6\",\"info_line\":\"MyPosts_info_line__V3dtd\",\"avatar\":\"MyPosts_avatar__3TZKx\",\"message\":\"MyPosts_message__brCJu\",\"crown\":\"MyPosts_crown__3hLQf\",\"likesInner\":\"MyPosts_likesInner__4vYBD\",\"likesBtn\":\"MyPosts_likesBtn__TyhE5\",\"likesCount\":\"MyPosts_likesCount__1gO03\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inner\":\"AboutMe_inner__1LuEF\",\"title\":\"AboutMe_title__2hLYr\",\"line\":\"AboutMe_line__Y-aIm\",\"description\":\"AboutMe_description__2svGX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inner\":\"Header_inner__3a4dO\",\"logoInner\":\"Header_logoInner__25vgs\",\"logo\":\"Header_logo__1yrPa\",\"menu\":\"Header_menu__23e_l\",\"loginButtons\":\"Header_loginButtons__RXaSm\",\"userName\":\"Header_userName__2eUfQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inner\":\"DailyQuote_inner__3xz8O\",\"quoteInner\":\"DailyQuote_quoteInner__1UzWo\",\"bg\":\"DailyQuote_bg__3eYxK\",\"quote\":\"DailyQuote_quote__3Vi8J\",\"quoteText\":\"DailyQuote_quoteText__QsVo4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"article\":\"Article_article__2xjQn\",\"title\":\"Article_title__FShgL\",\"image\":\"Article_image__16g50\",\"sourceName\":\"Article_sourceName__3F7nQ\",\"description\":\"Article_description__gwCq2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Posts_posts__DdtgF\",\"btn\":\"Posts_btn__2NSKs\",\"title\":\"Posts_title__2BCAy\",\"textarea\":\"Posts_textarea__3eY95\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inner\":\"News_inner__2-Ha1\",\"articlesInner\":\"News_articlesInner__LDVp4\",\"articles\":\"News_articles__2OXU_\",\"pagination\":\"News_pagination__1ms24\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icons\":\"SocialICons_icons__itnHH\",\"icon\":\"SocialICons_icon__2eTRE\",\"iconImg\":\"SocialICons_iconImg__1IVJD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inner\":\"AdditionalInfo_inner__1ypFX\",\"title\":\"AdditionalInfo_title__1U8-y\",\"frame_wrapper\":\"AdditionalInfo_frame_wrapper__2FDiX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inner\":\"Preloader_inner__24CEG\",\"img\":\"Preloader_img__3VzK1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inner\":\"Login_inner__3FzSA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__DNvtS\"};"],"sourceRoot":""}