{"version":3,"sources":["Components/Login/LoginForm/LoginForm.module.css","Components/Navbar/Navbar.module.css","Components/Users/Users.module.css","Components/Profile/Posts/MyPosts/MyPosts.module.css","Components/Profile/GeneralInfo/AboutMe/AboutMe.module.css","Components/Header/Header.module.css","Components/DailyQuote/DailyQuote.module.scss","Components/Profile/Posts/Posts.module.css","Components/Profile/SocialIcon/SocialICons.module.css","Components/Profile/AdditionalInfo/AdditionalInfo.module.css","Components/Preloader/Preloader.module.scss","Components/Main/Main.module.css","Components/Login/Login.module.scss","Components/Profile/Profile.module.css","Components/Header/headerImages/header-logo.png","Components/Buttons/Button.tsx","DAL/api.ts","BLL/auth-reducer.ts","Components/Header/Header.tsx","Components/Navbar/images/profile.svg","Components/Navbar/images/messages.svg","Components/Navbar/images/settings.svg","Components/Navbar/images/music.svg","Components/Navbar/images/users.svg","Components/Navbar/Navbar.tsx","Components/Profile/images/profile-bg.png","BLL/profile-reducer.ts","Components/Profile/images/youtube.svg","Components/Profile/images/twitch.svg","Components/Profile/images/tiktok.svg","Components/Profile/images/instagram.svg","Components/Profile/SocialIcon/SocialIcon.tsx","Components/Profile/Posts/MyPosts/images/crown.svg","images/profile-avatar.png","Components/Profile/Posts/MyPosts/MyPosts.tsx","Components/Profile/Posts/Posts.tsx","Components/Profile/GeneralInfo/AboutMe/AboutMe.tsx","Components/Profile/GeneralInfo/GeneralInfo.tsx","Components/Profile/AdditionalInfo/AdditionalInfo.tsx","Components/Profile/Profile.tsx","BLL/users-reducer.ts","images/preloader.gif","Components/Preloader/Preloader.tsx","Components/Users/User/User.tsx","Components/Users/Users.tsx","Components/Login/LoginForm/LoginForm.tsx","Components/Login/Login.tsx","BLL/daily-quote-reducer.ts","images/q.jpg","Components/DailyQuote/DailyQuote.tsx","Components/Main/Main.tsx","Components/Footer/Footer.tsx","App.tsx","reportWebVitals.ts","BLL/store.ts","index.tsx"],"names":["module","exports","Button","React","memo","className","onClick","text","instance","axios","create","baseURL","headers","withCredentials","UsersApi","usersCount","currentPage","get","then","response","data","userId","post","delete","ProfileApi","paramsId","status","put","CommonApi","AuthApi","email","password","rememberMe","initState","id","login","isAuth","setAuthData","type","setMyAuthData","dispatch","resultCode","Header","authData","useSelector","state","authPage","useDispatch","useEffect","classes","inner","logoInner","to","logo","src","headerLogo","alt","loginButtons","userName","Navbar","navbar","menu","item","link","profileIcon","messagesIcon","settingIcon","musicIcon","userIcon","posts","message","likesCounter","profileInfo","postsNumber","friendsNumber","commentsNumber","photos","small","large","membership","userStatus","userProfile","fullName","newPostMessage","aboutUserInfo","userDescription","joinTime","userAddress","profileReducer","action","newPostValue","newPost","newValue","map","p","postId","socialIcons","icon","youTube","twitch","tiktok","instagram","SocialIcons","socialIcon","i","href","iconImg","icons","MyPosts","profilePage","profile","myPosts","t","info_line","avatar","userAvatar","likesInner","likesBtn","incLikesAC","crownIcon","crown","likesCount","Posts","addPostOnClickHandler","useCallback","addNewPostAC","onChangeHandler","e","currentTarget","value","title","onChange","textarea","btn","AboutMe","userInfo","line","description","GeneralInfo","AdditionalInfo","frame_wrapper","frameBorder","scrolling","height","width","allowFullScreen","Profile","useState","editMode","setEditMode","inputTitle","setInputTitle","useParams","onExitEditMode","console","log","header","profileBg","bg","header_info","header_left","header_left_box","header_mid","header_mid_box","avatar_box","userLevel","userMembership","onBlur","autoFocus","onDoubleClick","socialLinks","SocialIcon","main_content","replace","users","pagesNumber","totalCount","isFetching","isFollowed","s","setISFetching","setISFollowed","getUsers","setCurrentPage","items","usersReducer","u","followed","filter","Preloader","block","preloaderImg","img","User","user","userIsFollowed","onClickFollowHandler","onClickUnfollowHandler","visitUser","name","disabled","some","userBtn","Users","usersPage","onPageChange","event","page","unfollowUserAC","unFollowUser","followUserAC","followUser","users_inner","pagination","Pagination","count","color","size","users_elements","initialValues","submitForm","values","LoginForm","setDisabled","validate","errors","undefined","test","length","onSubmit","formik","handleChange","handleSubmit","touched","handleBlur","container","form","formRow","formLine","htmlFor","formLabel","inputError","input","error","disabledBtn","Login","quote","setQuoteIsFetching","getDailyQuote","DailyQuote","dailyQuotePage","onGetQuote","quoteInner","quoteText","quoteBg","Main","props","main","path","element","Footer","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","RootReducer","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.112c387c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LoginForm_container__2qdIi\",\"title\":\"LoginForm_title__2fhRQ\",\"formLine\":\"LoginForm_formLine__2cdoI\",\"form\":\"LoginForm_form__1wa08\",\"formLabel\":\"LoginForm_formLabel__21WOD\",\"btn\":\"LoginForm_btn__1b1Et\",\"input\":\"LoginForm_input__1bLUW\",\"inputError\":\"LoginForm_inputError__mfxHu\",\"error\":\"LoginForm_error__2NE7K\",\"disabledBtn\":\"LoginForm_disabledBtn__3b1hK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__1glNI\",\"menu\":\"Navbar_menu__3aw_d\",\"item\":\"Navbar_item__2I03I\",\"link\":\"Navbar_link__16QFG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__14ed9\",\"users_inner\":\"Users_users_inner__2V3vh\",\"users_elements\":\"Users_users_elements__1AS6N\",\"user\":\"Users_user__27-ZE\",\"avatar\":\"Users_avatar__27oSH\",\"userName\":\"Users_userName__3lIfx\",\"userBtn\":\"Users_userBtn__1XLsV\",\"pagination\":\"Users_pagination__3zU3m\",\"activePaginationBtn\":\"Users_activePaginationBtn__1Yy5M\",\"paginationBtn\":\"Users_paginationBtn__1-ZMW\",\"visitUser\":\"Users_visitUser__25A1Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"MyPosts_post__2juG6\",\"info_line\":\"MyPosts_info_line__V3dtd\",\"avatar\":\"MyPosts_avatar__3TZKx\",\"message\":\"MyPosts_message__brCJu\",\"crown\":\"MyPosts_crown__3hLQf\",\"likesInner\":\"MyPosts_likesInner__4vYBD\",\"likesBtn\":\"MyPosts_likesBtn__TyhE5\",\"likesCount\":\"MyPosts_likesCount__1gO03\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inner\":\"AboutMe_inner__1LuEF\",\"title\":\"AboutMe_title__2hLYr\",\"line\":\"AboutMe_line__Y-aIm\",\"description\":\"AboutMe_description__2svGX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inner\":\"Header_inner__3a4dO\",\"logoInner\":\"Header_logoInner__25vgs\",\"logo\":\"Header_logo__1yrPa\",\"menu\":\"Header_menu__23e_l\",\"loginButtons\":\"Header_loginButtons__RXaSm\",\"userName\":\"Header_userName__2eUfQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inner\":\"DailyQuote_inner__3xz8O\",\"quoteInner\":\"DailyQuote_quoteInner__1UzWo\",\"bg\":\"DailyQuote_bg__3eYxK\",\"quote\":\"DailyQuote_quote__3Vi8J\",\"quoteText\":\"DailyQuote_quoteText__QsVo4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Posts_posts__DdtgF\",\"btn\":\"Posts_btn__2NSKs\",\"title\":\"Posts_title__2BCAy\",\"textarea\":\"Posts_textarea__3eY95\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icons\":\"SocialICons_icons__itnHH\",\"icon\":\"SocialICons_icon__2eTRE\",\"iconImg\":\"SocialICons_iconImg__1IVJD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inner\":\"AdditionalInfo_inner__1ypFX\",\"title\":\"AdditionalInfo_title__1U8-y\",\"frame_wrapper\":\"AdditionalInfo_frame_wrapper__2FDiX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inner\":\"Preloader_inner__24CEG\",\"img\":\"Preloader_img__3VzK1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__DNvtS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inner\":\"Login_inner__3FzSA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inner\":\"Profile_inner__1nBlQ\",\"header\":\"Profile_header__y6y_p\",\"header_info\":\"Profile_header_info__2Gcfx\",\"bg\":\"Profile_bg__vxBlz\",\"header_left\":\"Profile_header_left__3NdnI\",\"header_left_box\":\"Profile_header_left_box__3NGcU\",\"header_mid\":\"Profile_header_mid__3UG6t\",\"avatar_box\":\"Profile_avatar_box__13SX-\",\"avatar\":\"Profile_avatar__15YLN\",\"header_mid_box\":\"Profile_header_mid_box__220L7\",\"userName\":\"Profile_userName__ZGJI1\",\"userMembership\":\"Profile_userMembership__1UXNa\",\"userLevel\":\"Profile_userLevel__1dLj-\",\"socialLinks\":\"Profile_socialLinks__FbCpO\",\"main_content\":\"Profile_main_content__2PGwM\"};","export default __webpack_public_path__ + \"static/media/header-logo.ad29cc75.png\";","import React from \"react\";\r\n\r\n\r\ntype ButtonPropsType = {\r\n    className: string\r\n    onClick: () => void\r\n    text: string\r\n\r\n}\r\n\r\n\r\nconst Button = React.memo(({className, onClick, text}: ButtonPropsType) => {\r\n\r\n    const onClickHandler = () => {\r\n        onClick();\r\n    }\r\n\r\n    return(\r\n        <button onClick={onClickHandler} className={className}>\r\n            {text}\r\n        </button>\r\n    )\r\n})\r\n\r\nexport default Button","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0',\r\n    headers: {\r\n        \"API-KEY\": \"0c12297a-a516-42d3-9509-82bfb5d48238\",\r\n    },\r\n    withCredentials: true\r\n})\r\n\r\nexport const UsersApi = {\r\n    getUsers(usersCount: number, currentPage: number) {\r\n        return instance.get(`/users?count=${usersCount}&page=${currentPage}`, {})\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    followUser(userId: string) {\r\n        return instance.post(`/follow/${userId}`, {}, {})\r\n    },\r\n    unFollowUser(userId: string) {\r\n        return instance.delete(`/follow/${userId}`, {})\r\n    }\r\n}\r\n\r\nexport const ProfileApi = {\r\n    getProfile(paramsId: string | undefined) {\r\n        return instance.get(`/profile/${paramsId}`)\r\n    },\r\n    getStatus(paramsId: string | undefined) {\r\n        return instance.get(`/profile/status/${paramsId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    updateStatus(status: Object) {\r\n        return instance.put(`/profile/status`, {status})\r\n    }\r\n}\r\nexport const CommonApi = {\r\n    getDailyQuote(){\r\n        return axios.get(`https://animechan.vercel.app/api/random`)\r\n    }\r\n}\r\n\r\nexport const AuthApi = {\r\n    authMe() {\r\n        return instance.get('/auth/me', {})\r\n    },\r\n    login(email:string, password: string, rememberMe = false) {\r\n        return instance.post(`/auth/login`, {email, password, rememberMe})\r\n    },\r\n    logOut(){\r\n        return instance.delete(`/auth/login`)\r\n    }\r\n}\r\n\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {AuthApi} from \"../DAL/api\";\r\n\r\nexport type AuthStateType = {\r\n    data: {\r\n        id: string\r\n        login: string\r\n        email: string\r\n\r\n    },\r\n    isAuth: boolean\r\n}\r\n\r\nconst initState = {\r\n    data: {\r\n        id: '',\r\n        login: '',\r\n        email: ''\r\n\r\n    },\r\n    isAuth: false\r\n}\r\n\r\n\r\nexport const authReducer = (state: AuthStateType = initState, action: authActionsType) => {\r\n    switch (action.type) {\r\n        case \"SET-AUTH-DATA\": {\r\n            return {\r\n                ...state,\r\n                data: {\r\n                    ...state.data,\r\n                    id: action.id,\r\n                    login: action.login,\r\n                    email: action.email\r\n                },\r\n                isAuth: action.isAuth\r\n\r\n            }\r\n        }\r\n        case \"SET-IS-LOGIN\": {\r\n            return {\r\n                ...state,\r\n                data: {\r\n                    ...state.data,\r\n                    id: action.id\r\n                }\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n//Actions\r\n\r\nexport type authActionsType = setIsLoginType | setAuthDataType;\r\n\r\nexport type setAuthDataType = ReturnType<typeof setAuthData>\r\n\r\nexport const setAuthData = (id: string | null, login: string | null, email: string | null, isAuth: boolean) => {\r\n    return {\r\n        type: 'SET-AUTH-DATA',\r\n        id,\r\n        login,\r\n        email,\r\n        isAuth\r\n    } as const\r\n}\r\n\r\nexport type setIsLoginType = ReturnType<typeof setIsLogin>\r\nexport const setIsLogin = (id: number) => {\r\n    return {\r\n        type: 'SET-IS-LOGIN',\r\n        id\r\n    } as const\r\n}\r\n\r\n//Thunk\r\n\r\nexport const setMyAuthData = () => {\r\n    return (dispatch: Dispatch) => {\r\n        AuthApi.authMe()\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    let {id, login, email} = response.data.data;\r\n                    dispatch(setAuthData(id, login, email, true))\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport const getIsLogin = (email: string, password: string, rememberMe: boolean) => {\r\n    return (dispatch: Dispatch) => {\r\n        AuthApi.login(email, password, rememberMe)\r\n            .then((response) => {\r\n                if (response.data.resultCode === 0) {\r\n                    // @ts-ignore\r\n                    dispatch(setMyAuthData())\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport const logOut = () => {\r\n    return (dispatch: Dispatch) => {\r\n        AuthApi.logOut()\r\n            .then((response) => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(setAuthData(null, null, null, false))\r\n                }\r\n            })\r\n    }\r\n}\r\n","import React, {useEffect} from \"react\";\r\nimport classes from \"./Header.module.css\";\r\nimport headerLogo from './headerImages/header-logo.png'\r\nimport Button from \"../Buttons/Button\";\r\nimport {AuthStateType, logOut, setMyAuthData} from \"../../BLL/auth-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootReducerType} from \"../../BLL/store\";\r\nimport {NavLink} from \"react-router-dom\";\r\nconst Header = React.memo(() => {\r\n\r\n    let authData = useSelector<RootReducerType, AuthStateType>(state => state.authPage)\r\n    let dispatch = useDispatch()\r\n\r\n    useEffect( () => {\r\n        dispatch(setMyAuthData())\r\n    } ,[dispatch] )\r\n\r\n    const onLogout = () => {\r\n        dispatch(logOut())\r\n    }\r\n    return(\r\n        <header>\r\n            <div className={classes.inner}>\r\n                <div className={classes.logoInner}>\r\n                    <NavLink to={'/profile'} className={classes.logo}>\r\n                        <img src={headerLogo} alt=\"header-logo\"/>\r\n                    </NavLink>\r\n                    <p>Lumos</p>\r\n                </div>\r\n                {/*<div className={classes.bigMenuSwitcher}>*/}\r\n                {/*    switcher*/}\r\n                {/*</div>*/}\r\n                {/*<ul className={classes.menu}>*/}\r\n                {/*    <li>*/}\r\n                {/*        <a href=\"#\">Home</a>*/}\r\n                {/*    </li>*/}\r\n                {/*    <li>*/}\r\n                {/*        <a href=\"#\">Features</a>*/}\r\n                {/*    </li>*/}\r\n                {/*    <li>*/}\r\n                {/*        <a href=\"#\">More</a>*/}\r\n                {/*    </li>*/}\r\n                {/*</ul>*/}\r\n                {/*<div className={classes.search}>*/}\r\n                {/*    <input type=\"search\"/>*/}\r\n                {/*</div>*/}\r\n                {authData.isAuth\r\n                    ?\r\n                    <div className={classes.loginButtons}>\r\n                        <p className={classes.userName}>Welcome {authData.data.login}</p>\r\n                        <Button className={'commonBtn'} onClick={onLogout} text={'Log out'}/>\r\n                    </div>\r\n                    :\r\n                    <Button className={'commonBtn'} onClick={()=>{} } text={'Login'}/>\r\n                }\r\n            </div>\r\n        </header>\r\n    )\r\n})\r\n\r\nexport default Header","export default __webpack_public_path__ + \"static/media/profile.9d4d5a29.svg\";","export default __webpack_public_path__ + \"static/media/messages.1bad7cf9.svg\";","export default __webpack_public_path__ + \"static/media/settings.627fc741.svg\";","export default __webpack_public_path__ + \"static/media/music.1bac8f02.svg\";","export default __webpack_public_path__ + \"static/media/users.e7baea37.svg\";","import React from \"react\";\r\nimport classes from \"./Navbar.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport profileIcon from './images/profile.svg';\r\nimport messagesIcon from './images/messages.svg'\r\nimport settingIcon from './images/settings.svg'\r\nimport musicIcon from './images/music.svg'\r\nimport userIcon from './images/users.svg'\r\nconst Navbar = React.memo(() => {\r\n    return(\r\n        <nav className= {classes.navbar}>\r\n            <ul className={classes.menu}>\r\n                <li className={classes.item}>\r\n                    <NavLink to=\"/profile\" className={classes.link}>\r\n                        <img src={profileIcon} alt=\"profile\"/>\r\n                        Profile\r\n                    </NavLink>\r\n                </li>\r\n                <li className={classes.item}>\r\n                    <NavLink to=\"/dialogs\" className={classes.link}>\r\n                        <img src={messagesIcon} alt=\"messages\"/>\r\n                        Messages\r\n                    </NavLink>\r\n                </li>\r\n                <li className={classes.item}>\r\n                    <NavLink to=\"/daily-quote\" className={classes.link}>\r\n                        <img src={settingIcon} alt=\"daily-quote\"/>\r\n                        Daily Quote\r\n                    </NavLink>\r\n                </li>\r\n                {/*<li className={classes.item}>*/}\r\n                {/*    <NavLink to=\"/news\" className={classes.link}>*/}\r\n                {/*        <img src={newsIcon} alt=\"news\"/>*/}\r\n                {/*        News*/}\r\n                {/*    </NavLink>*/}\r\n                {/*</li>*/}\r\n                <li className={classes.item}>\r\n                    <NavLink to=\"/music\" className={classes.link}>\r\n                        <img src={musicIcon} alt=\"music\"/>\r\n                        Music\r\n                    </NavLink>\r\n                </li>\r\n                {/*<li className={classes.item}>*/}\r\n                {/*    <NavLink to=\"/settings\" className={classes.link}>*/}\r\n                {/*        <img src={settingIcon} alt=\"settings\"/>*/}\r\n                {/*        Settings*/}\r\n                {/*    </NavLink>*/}\r\n                {/*</li>*/}\r\n                <li className={classes.item}>\r\n                    <NavLink to=\"/users\" className={classes.link}>\r\n                        <img src={userIcon} alt=\"users\"/>\r\n                        Users\r\n                    </NavLink>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n})\r\n\r\nexport default Navbar","export default __webpack_public_path__ + \"static/media/profile-bg.c2555e70.png\";","import {Dispatch} from \"redux\";\r\nimport {ProfileApi} from \"../DAL/api\";\r\n\r\nexport type ProfilePageType = {\r\n    posts: Array<PostType>\r\n    profileInfo: ProfileInfo\r\n    newPostMessage: string\r\n    aboutUserInfo: UserType\r\n    userProfile: UserProfileType\r\n\r\n}\r\nexport type PostType = {\r\n    id: string\r\n    message: string\r\n    likesCounter: number\r\n}\r\nexport type ProfileInfo = {\r\n    postsNumber: number\r\n    friendsNumber: number\r\n    commentsNumber: number\r\n    // avatar: string\r\n    userName: string\r\n    membership: string\r\n    userStatus: string\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n}\r\nexport type UserType = {\r\n    userDescription: string\r\n    joinTime: string\r\n    userAddress: string\r\n}\r\nexport type UserProfileType = {\r\n        photos: {\r\n            small: string\r\n            large: string\r\n        }\r\n        fullName: string\r\n}\r\n\r\n\r\nconst initState: ProfilePageType = {\r\n    posts: [\r\n        {id: '1', message: 'Hello, i am Julian!', likesCounter: 22},\r\n        {id: '2', message: 'Hello, i am Lili!', likesCounter: 42},\r\n        {id: '3', message: 'Hello, i am Juliana!', likesCounter: 12}\r\n    ],\r\n    profileInfo: {\r\n        postsNumber: 10,\r\n        friendsNumber: 22,\r\n        commentsNumber: 15,\r\n        photos: {\r\n            small: '',\r\n            large: ''\r\n        },\r\n        // avatar: 'https://e7.pngegg.com/pngimages/1009/704/png-clipart-avatar-child-computer-icons-user-profile-smiling-boy-child-face-thumbnail.png',\r\n        userName: 'Julius Kenard',\r\n        membership: 'Pro Member',\r\n        userStatus: ''\r\n    },\r\n    userProfile: {\r\n        photos: {\r\n            small: '',\r\n            large: ''\r\n        },\r\n        fullName: 'Julius Kenard'\r\n    },\r\n    newPostMessage: 'He He suiii!',\r\n    aboutUserInfo: {\r\n        userDescription: 'Hi! My name is Julius but some people may know me as GameHunter! ' +\r\n            'I have a Twitch channel where I stream, play and review all the newest games.',\r\n        joinTime: 'September 23, 2020',\r\n        userAddress: 'Los Angeles, California'\r\n    }\r\n\r\n}\r\n\r\nconst profileReducer = (state: ProfilePageType = initState, action: GenericType) => {\r\n    switch (action.type) {\r\n        case \"UPDATE-POST-VALUE\": {\r\n            return {\r\n                ...state,\r\n                newPostMessage: action.newPostValue\r\n            }\r\n        }\r\n        case \"ADD-NEW-POST\": {\r\n            let newPost =  {id: '3', message: action.newValue, likesCounter: 12}\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostMessage: ''\r\n            }\r\n        }\r\n        case \"INCREASE-LIKES\": {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.map( p => action.postId === p.id ? {...p, likesCounter: action.likesCounter + 1 } : p )\r\n            }\r\n        }\r\n        case \"SET-USER-PROFILE\": {\r\n            return {\r\n                ...state,\r\n                userProfile: action.userProfile\r\n            }\r\n        }\r\n        case \"GET-USER-STATUS\": {\r\n            return {\r\n                ...state,\r\n                profileInfo: {\r\n                    ...state.profileInfo,\r\n                    userStatus: action.userStatus\r\n                }\r\n            }\r\n        }\r\n        case \"SET-USER-STATUS\": {\r\n            return {\r\n                ...state,\r\n                profileInfo: {\r\n                    ...state.profileInfo,\r\n                    userStatus: action.userStatus\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    return state\r\n}\r\n\r\nexport type GenericType = updateNewPostMessageACType | addNewPostACType | incLikesACType | setUserProfileType | getUserStatusType | changeUserStatusType;\r\n//Actions\r\nexport type updateNewPostMessageACType = ReturnType<typeof updateNewPostMessageAC>\r\nexport const updateNewPostMessageAC = (value: string) => {\r\n    return{\r\n        type: 'UPDATE-POST-VALUE',\r\n        newPostValue: value\r\n    }as const\r\n}\r\n\r\nexport type addNewPostACType = ReturnType<typeof addNewPostAC>\r\nexport const addNewPostAC = (newValue: string) => {\r\n    return{\r\n        type: 'ADD-NEW-POST',\r\n        newValue\r\n    } as const\r\n}\r\n\r\nexport type incLikesACType = ReturnType<typeof incLikesAC>\r\nexport const incLikesAC = (postId: string, likesCounter: number) => {\r\n    return{\r\n        type: 'INCREASE-LIKES',\r\n        postId,\r\n        likesCounter\r\n    } as const\r\n}\r\n\r\nexport type setUserProfileType = ReturnType<typeof setUserProfile>\r\nexport const setUserProfile = (userProfile: any) => {\r\n    return{\r\n        type: 'SET-USER-PROFILE',\r\n        userProfile\r\n    } as const\r\n}\r\n\r\nexport type getUserStatusType = ReturnType<typeof getUserStatus>\r\nexport const getUserStatus = (userStatus: any) => {\r\n    return{\r\n        type: 'GET-USER-STATUS',\r\n        userStatus\r\n    } as const\r\n}\r\n\r\nexport type  changeUserStatusType = ReturnType<typeof changeUserStatus>\r\nexport const changeUserStatus = (userStatus: Object) => {\r\n    return{\r\n        type: 'SET-USER-STATUS',\r\n        userStatus\r\n    } as const\r\n}\r\n\r\n//Thunk\r\n\r\nexport const setUSerProfile = (paramsId: string | undefined) => {\r\n    return (dispatch: Dispatch) => {\r\n        ProfileApi.getProfile(paramsId)\r\n            .then(response => {\r\n                dispatch(setUserProfile(response.data))\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const setUserStatus = (paramsId: string | undefined) => {\r\n   return (dispatch: Dispatch) => {\r\n       ProfileApi.getStatus(paramsId)\r\n           .then(response => {\r\n               dispatch(getUserStatus(response))\r\n           })\r\n   }\r\n}\r\n\r\nexport const updateUSerStatus = (status: Object) => {\r\n    return (dispatch: Dispatch) => {\r\n        ProfileApi.updateStatus(status)\r\n            .then( (response) => {\r\n                dispatch(changeUserStatus(response.status))\r\n            } )\r\n    }\r\n}\r\n\r\nexport default profileReducer","export default __webpack_public_path__ + \"static/media/youtube.54534ab2.svg\";","export default __webpack_public_path__ + \"static/media/twitch.ead2a3ae.svg\";","export default __webpack_public_path__ + \"static/media/tiktok.845f7c13.svg\";","export default __webpack_public_path__ + \"static/media/instagram.0b3e8a0c.svg\";","import React from \"react\";\r\nimport youTube from '../images/youtube.svg'\r\nimport twitch from '../images/twitch.svg'\r\nimport tiktok from  '../images/tiktok.svg'\r\nimport instagram from '../images/instagram.svg'\r\nimport classes from \"./SocialICons.module.css\";\r\nconst socialIcons = [\r\n    {icon: youTube},\r\n    {icon: twitch},\r\n    {icon: tiktok},\r\n    {icon: instagram}\r\n]\r\n\r\n\r\n\r\nconst SocialIcons = () => {\r\n    const socialIcon = socialIcons.map( i => {\r\n        return(\r\n            <a href=\"#\" className={classes.icon} >\r\n                <img  src={i.icon} alt=\"icon\" className={classes.iconImg}/>\r\n            </a>\r\n        )\r\n    } )\r\n    return(\r\n        <div className={classes.icons}>\r\n            {socialIcon}\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default SocialIcons","export default __webpack_public_path__ + \"static/media/crown.baa223b2.svg\";","export default __webpack_public_path__ + \"static/media/profile-avatar.e2b0c687.png\";","import React from \"react\";\r\nimport {incLikesAC, PostType, ProfilePageType} from \"../../../../BLL/profile-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootReducerType} from \"../../../../BLL/store\";\r\nimport classes from \"./MyPosts.module.css\";\r\nimport crownIcon from  './images/crown.svg'\r\nimport userAvatar from './../../../../images/profile-avatar.png'\r\n\r\n\r\nconst MyPosts = () => {\r\n    let posts = useSelector<RootReducerType, Array<PostType>>(state => state.profilePage.posts)\r\n    let profile = useSelector<RootReducerType, ProfilePageType>(state => state.profilePage)\r\n    let dispatch = useDispatch()\r\n    const onClickHandler = (postId: string, likesCounter: number) => {\r\n        dispatch(incLikesAC(postId, likesCounter))\r\n    }\r\n\r\n    let myPosts = posts.map( t => {\r\n        return(\r\n            <div key={t.id} id={t.id} className={classes.post}>\r\n                <div className={classes.info_line}>\r\n                    <div className={classes.avatar}>\r\n                        <img src={profile.userProfile.photos.small === null ? userAvatar : profile.userProfile.photos.small} alt=\"avatar\"/>\r\n                    </div>\r\n                    <p className={classes.message}>{t.message}</p>\r\n                </div>\r\n                <div className={classes.likesInner}>\r\n                    <button className={classes.likesBtn} onClick={()=>onClickHandler(t.id, t.likesCounter)}>\r\n                        <img src={crownIcon} alt=\"crown\" className={classes.crown}/>\r\n                    </button>\r\n                    <p className={classes.likesCount}>{t.likesCounter}</p>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    } )\r\n    return(\r\n        <div>\r\n            {myPosts}\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default React.memo(MyPosts)\r\n// export default MyPosts","import React, {ChangeEvent, useCallback} from \"react\";\r\nimport {addNewPostAC, updateNewPostMessageAC} from \"../../../BLL/profile-reducer\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport classes from \"./Posts.module.css\";\r\nimport Button from \"../../Buttons/Button\";\r\n\r\ntype PostsPropsType = {\r\n    newValue: string\r\n}\r\n\r\nconst Posts = React.memo(({newValue}: PostsPropsType) => {\r\n\r\n    let dispatch = useDispatch()\r\n    const addPostOnClickHandler = useCallback(() => {\r\n        if(newValue){\r\n            dispatch(addNewPostAC(newValue))\r\n        }\r\n    },[dispatch, newValue])\r\n    const onChangeHandler = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        dispatch(updateNewPostMessageAC(e.currentTarget.value))\r\n    },[dispatch])\r\n\r\n\r\n    return(\r\n        <div className={classes.posts}>\r\n            <h2 className={classes.title}>My Posts</h2>\r\n            <div>\r\n                <textarea\r\n                    value={newValue}\r\n                    onChange={onChangeHandler}\r\n                    className={classes.textarea}\r\n                />\r\n                <Button\r\n                    className={`commonBtn ${classes.btn}`}\r\n                    onClick={addPostOnClickHandler}\r\n                    text={'Add post'}\r\n                />\r\n                {/*<button onClick={addPostOnClickHandler}>Add post</button>*/}\r\n            </div>\r\n            <MyPosts/>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Posts","import React from \"react\";\r\nimport classes from \"./AboutMe.module.css\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootReducerType} from \"../../../../BLL/store\";\r\nimport {UserType} from \"../../../../BLL/profile-reducer\";\r\n\r\nconst AboutMe = () => {\r\n\r\n    let userInfo = useSelector<RootReducerType, UserType>(state => state.profilePage.aboutUserInfo)\r\n\r\n    return(\r\n        <div className={classes.inner}>\r\n            <h3 className={classes.title}>About Me</h3>\r\n            <div className={classes.line}>\r\n                <p className={classes.description}>{userInfo.userDescription}</p>\r\n            </div>\r\n            <div className={classes.line}>\r\n                <p>Joined</p>\r\n                <p>{userInfo.joinTime}</p>\r\n            </div>\r\n            <div className={classes.line}>\r\n                <p>Location</p>\r\n                <p>{userInfo.userAddress}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AboutMe","import React from \"react\";\r\nimport AboutMe from \"./AboutMe/AboutMe\";\r\n\r\nconst GeneralInfo = () => {\r\n    return(\r\n        <AboutMe/>\r\n    )\r\n}\r\n\r\nexport default GeneralInfo","import React from \"react\";\r\nimport classes from \"./AdditionalInfo.module.css\";\r\n\r\nconst AdditionalInfo = () => {\r\n    return(\r\n        <div className={classes.inner}>\r\n            <h3 className={classes.title}>Stream Box</h3>\r\n            <div className={classes.frame_wrapper}>\r\n                <iframe src=\"https://www.twitch.tv/videos/411305682\" frameBorder=\"0\"\r\n                        scrolling=\"no\" height=\"100%\" width=\"100%\" allowFullScreen={true} title={'twitch'}></iframe>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdditionalInfo","import React, {ChangeEvent, useCallback, useEffect} from \"react\";\r\nimport profileBg from './images/profile-bg.png'\r\nimport classes from \"./Profile.module.css\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootReducerType} from \"../../BLL/store\";\r\nimport {\r\n    ProfilePageType,\r\n    setUSerProfile,\r\n    setUserStatus, updateUSerStatus\r\n} from \"../../BLL/profile-reducer\";\r\nimport SocialIcons from \"./SocialIcon/SocialIcon\";\r\nimport Posts from \"./Posts/Posts\";\r\nimport GeneralInfo from \"./GeneralInfo/GeneralInfo\";\r\nimport AdditionalInfo from \"./AdditionalInfo/AdditionalInfo\";\r\nimport {Navigate, useParams} from \"react-router-dom\";\r\nimport userAvatar from './../../images/profile-avatar.png'\r\n\r\n\r\n\r\n\r\n\r\nconst Profile = React.memo(() => {\r\n    let profile = useSelector<RootReducerType, ProfilePageType>(state => state.profilePage)\r\n    // @ts-ignore\r\n    let isAuth = useSelector<RootReducerType, boolean>(state => state.authPage.isAuth)\r\n    let dispatch = useDispatch();\r\n    const [editMode, setEditMode] = React.useState(false)\r\n    const [inputTitle, setInputTitle] = React.useState(profile.profileInfo.userStatus)\r\n    let {id} = useParams();\r\n    if(!id){\r\n        id = '20604';\r\n    }\r\n    useEffect(() => {\r\n        dispatch(setUSerProfile(id))\r\n    }, [id, dispatch])\r\n    useEffect( () => {\r\n       dispatch(setUserStatus(id))\r\n    },[id, dispatch] )\r\n\r\n\r\n    const onSetEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const onExitEditMode = useCallback(() => {\r\n        setEditMode(false)\r\n        dispatch(updateUSerStatus(inputTitle))\r\n    },[dispatch, inputTitle])\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setInputTitle(e.currentTarget.value)\r\n    }\r\n    console.log(typeof profile.profileInfo.photos.large)\r\n    return (\r\n        !isAuth ?\r\n            <Navigate replace to=\"/login\" />\r\n            :\r\n        <section className={classes.inner}>\r\n            <div className={classes.header}>\r\n                <img src={profileBg} alt=\"profile-bg\" className={classes.bg}/>\r\n                <div className={classes.header_info}>\r\n                    <div className={classes.header_left}>\r\n                        <div className={classes.header_left_box}>\r\n                            <p>{profile.profileInfo.postsNumber}</p>\r\n                            <p>Posts</p>\r\n                        </div>\r\n                        <div className={classes.header_left_box}>\r\n                            <p>{profile.profileInfo.friendsNumber}</p>\r\n                            <p>Friends</p>\r\n                        </div>\r\n                        <div className={classes.header_left_box}>\r\n                            <p>{profile.profileInfo.commentsNumber}</p>\r\n                            <p>Comments</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.header_mid}>\r\n                        <div className={classes.header_mid_box}>\r\n                            <div className={classes.avatar_box}>\r\n                                <img src={profile.userProfile.photos.large === null ? userAvatar : profile.userProfile.photos.large} alt=\"avatar\" className={classes.avatar}/>\r\n                            </div>\r\n                            <p className={classes.userLevel}>4</p>\r\n                        </div>\r\n                        <p className={classes.userName}>{profile.userProfile.fullName}</p>\r\n                        <p className={classes.userMembership}>{profile.profileInfo.membership}</p>\r\n                        <div>\r\n                            {editMode\r\n                                ? <input value={inputTitle}\r\n                                         onBlur={onExitEditMode}\r\n                                         autoFocus={true}\r\n                                         onChange={onChangeHandler}\r\n                                />\r\n                                :  <p onDoubleClick={onSetEditMode}>{inputTitle || 'Enter your status'}</p>\r\n                            }\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className={classes.socialLinks}>\r\n                        <SocialIcons/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={classes.main_content}>\r\n                <GeneralInfo/>\r\n                <Posts newValue={profile.newPostMessage}/>\r\n                <AdditionalInfo/>\r\n            </div>\r\n\r\n        </section>\r\n    )\r\n})\r\n\r\nexport default Profile","import {Dispatch} from \"redux\";\r\nimport {UsersApi} from \"../DAL/api\";\r\n\r\nexport type UserPageType = {\r\n    users: Array<UsersType>\r\n    pagesNumber: number\r\n    usersCount: number\r\n    currentPage: number\r\n    totalCount: number\r\n    isFetching: boolean\r\n    isFollowed: Array<string>\r\n    s: boolean\r\n\r\n}\r\n\r\nexport type UsersType = {\r\n    id: string\r\n    name: string\r\n    message: string\r\n    location: {\r\n        country: string\r\n        city: string\r\n    }\r\n    followed: boolean\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n}\r\nconst initState: UserPageType = {\r\n    users: [],\r\n    pagesNumber: 10,\r\n    usersCount: 10,\r\n    currentPage: 2,\r\n    totalCount: 10,\r\n    isFetching: true,\r\n    isFollowed: [],\r\n    s: false\r\n}\r\n\r\n\r\n\r\nconst usersReducer = (state: UserPageType = initState, action: GenericType) => {\r\n    switch (action.type) {\r\n        case \"FOLLOW-USER\": {\r\n            return {\r\n                ...state,\r\n                users: state.users.map( u => u.id === action.userId ? {...u, followed: true} : u  )\r\n            }\r\n        }\r\n        case \"UNFOLLOW-USER\": {\r\n            return {\r\n                ...state,\r\n                users: state.users.map( u => u.id === action.userId ? {...u, followed: false} : u )\r\n            }\r\n        }\r\n        case \"SET-USERS\": {\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        }\r\n        case \"SET-TOTAL-USERS-COUNT\": {\r\n            return {\r\n                ...state,\r\n                totalCount: action.totalCount\r\n            }\r\n        }\r\n        case \"SET-CURRENT-PAGE\": {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n        case \"SET-PRELOADER\": {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case \"SET-IS-FOLLOWED\": {\r\n            return {\r\n                ...state,\r\n                isFollowed: action.s\r\n                    ? [...state.isFollowed, action.userId]\r\n                    : [...state.isFollowed.filter(id => id !== action.userId)]\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\n\r\ntype GenericType = followUserACType | unfollowUserACType | setUsersACType\r\n    | setTotalUsersCountType | setCurrentPageType | setISFetchingType | setISFollowedType;\r\n\r\n// Actions\r\nexport type followUserACType = ReturnType<typeof followUserAC>\r\nexport const followUserAC = (userId: string) => {\r\n    return{\r\n        type: 'FOLLOW-USER',\r\n        userId\r\n    } as const\r\n}\r\n\r\nexport type unfollowUserACType = ReturnType<typeof unfollowUserAC>\r\nexport const unfollowUserAC = (userId: string) => {\r\n    return{\r\n        type: 'UNFOLLOW-USER',\r\n        userId\r\n    } as const\r\n}\r\n\r\nexport type setUsersACType = ReturnType<typeof setUsersAC>\r\nexport const setUsersAC = (users: Array<UserPageType>) => {\r\n    return{\r\n        type: 'SET-USERS',\r\n        users\r\n    } as const\r\n}\r\n\r\nexport type setTotalUsersCountType = ReturnType<typeof setTotalUsersCount>\r\nexport const setTotalUsersCount = (totalCount: number) => {\r\n    return{\r\n        type: 'SET-TOTAL-USERS-COUNT',\r\n        totalCount\r\n    } as const\r\n}\r\n\r\nexport type setCurrentPageType = ReturnType<typeof setCurrentPage>\r\nexport const setCurrentPage = (currentPage: number) => {\r\n    return{\r\n        type: 'SET-CURRENT-PAGE',\r\n        currentPage\r\n    } as const\r\n}\r\n\r\nexport type setISFetchingType = ReturnType<typeof setISFetching>\r\nexport const setISFetching = (isFetching: boolean) => {\r\n    return{\r\n        type: 'SET-PRELOADER',\r\n        isFetching\r\n    } as const\r\n}\r\n\r\nexport type setISFollowedType = ReturnType<typeof setISFollowed>\r\nexport const setISFollowed = (s: boolean, userId: string) => {\r\n    return{\r\n        type: 'SET-IS-FOLLOWED',\r\n        s,\r\n        userId\r\n    } as const\r\n}\r\n\r\n// Thunk\r\nexport const getUsers = (usersCount: number, currentPage: number) => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(setCurrentPage(currentPage))\r\n        dispatch(setISFetching(true))\r\n        UsersApi.getUsers(usersCount, currentPage)\r\n            .then(response => {\r\n                dispatch(setUsersAC(response.items))\r\n                dispatch(setISFetching(false))\r\n            })\r\n    }\r\n}\r\n\r\nexport const followUser = (userId: string) => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(setISFollowed(true, userId))\r\n        UsersApi.followUser(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(followUserAC(userId))\r\n                    dispatch(setISFollowed(false, userId))\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport const unFollowUser = (userId: string) => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(setISFollowed(true, userId))\r\n        UsersApi.unFollowUser(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(unfollowUserAC(userId))\r\n                    dispatch(setISFollowed(false, userId))\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport default usersReducer","export default __webpack_public_path__ + \"static/media/preloader.4ccf66d6.gif\";","import React from \"react\";\r\nimport preloaderImg from '../../images/preloader.gif'\r\nimport classes from './Preloader.module.scss'\r\n\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className={classes.inner}>\r\n            <div className={classes.block}>\r\n                <img src={preloaderImg} alt=\"preloader\" className={classes.img}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader","import React from \"react\";\r\nimport classes from \"../Users.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport SocialIcons from \"../../Profile/SocialIcon/SocialIcon\";\r\nimport {UsersType} from \"../../../BLL/users-reducer\";\r\nimport userAvatar from './../../../images/profile-avatar.png'\r\n\r\ntype UserPropsType = {\r\n    user: UsersType\r\n    userIsFollowed: Array<string>\r\n    onClickUnfollowHandler: (userId: string) => void\r\n    onClickFollowHandler: (userId: string) => void\r\n}\r\n\r\nconst User = React.memo(({user, userIsFollowed, onClickFollowHandler, onClickUnfollowHandler,  ...props}: UserPropsType) => {\r\n    console.log('user')\r\n    return(\r\n        <div key={user.id} id={user.id} className={classes.user}>\r\n            <div className={classes.avatar}>\r\n                <img src={user.photos.small === null ? userAvatar : user.photos.small} alt=\"avatar\"/>\r\n            </div>\r\n            <NavLink to={'/profile/' + user.id} className={classes.visitUser}>\r\n                <h4 className={classes.userName}>{user.name}</h4>\r\n            </NavLink>\r\n\r\n            <p>{user.message}</p>\r\n            {user.followed\r\n                ? <button disabled={userIsFollowed.some(id => id === user.id)}\r\n                          onClick={() => onClickUnfollowHandler(user.id)} className={classes.userBtn}>Unfollow</button>\r\n                : <button disabled={userIsFollowed.some(id => id === user.id)}\r\n                          onClick={() => onClickFollowHandler(user.id)} className={classes.userBtn}>Follow</button>\r\n            }\r\n            <SocialIcons/>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default User","import React, { useCallback, useEffect} from \"react\";\r\nimport classes from \"./Users.module.css\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootReducerType} from \"../../BLL/store\";\r\nimport {followUser, getUsers, unFollowUser, UserPageType} from \"../../BLL/users-reducer\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\nimport User from \"./User/User\";\r\nimport { Pagination } from \"@material-ui/core\";\r\n\r\n\r\nconst Users = React.memo(() => {\r\n    console.log('users')\r\n    let dispatch = useDispatch()\r\n\r\n    const usersPage = useSelector<RootReducerType, UserPageType>(state => state.usersPage)\r\n    // @ts-ignore\r\n    let isAuth = useSelector<RootReducerType, boolean>(state => state.authPage.isAuth)\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getUsers(usersPage.usersCount, usersPage.currentPage))\r\n    }, [dispatch, usersPage.usersCount, usersPage.currentPage])\r\n\r\n\r\n\r\n    const onPageChange = useCallback((event: React.ChangeEvent<unknown>, page: number) => {\r\n        dispatch(getUsers(usersPage.usersCount, page))\r\n    },[dispatch, usersPage.usersCount])\r\n\r\n\r\n    const onClickUnfollowHandler = useCallback((userId: string) => {\r\n        dispatch(unFollowUser(userId))\r\n    },[dispatch])\r\n\r\n    const onClickFollowHandler = useCallback((userId: string) => {\r\n        dispatch(followUser(userId))\r\n    },[dispatch])\r\n\r\n\r\n    let users = usersPage.users.map(u => {\r\n        return (\r\n            <User\r\n                user={u}\r\n                userIsFollowed={usersPage.isFollowed}\r\n                onClickUnfollowHandler={onClickUnfollowHandler}\r\n                onClickFollowHandler={onClickFollowHandler}\r\n            />\r\n        )\r\n    })\r\n\r\n\r\n\r\n    return(\r\n        !isAuth ?\r\n            <Navigate replace to=\"/login\" />\r\n            :\r\n        <section className={classes.users}>\r\n            {usersPage.isFetching ? <Preloader/> : null}\r\n            <div className={classes.users_inner}>\r\n                <div className={classes.pagination}>\r\n                    {/*{pagination}*/}\r\n                    <Pagination\r\n                        count={usersPage.pagesNumber}\r\n                        color=\"secondary\"\r\n                        page={usersPage.currentPage}\r\n                        onChange={onPageChange}\r\n                        size={'large'}\r\n                    />\r\n                </div>\r\n                <div className={classes.users_elements}>\r\n                    {users}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n})\r\n\r\nexport default Users","import React from \"react\";\r\nimport {Formik} from \"formik\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {getIsLogin} from \"../../../BLL/auth-reducer\";\r\nimport s from './LoginForm.module.css'\r\n\r\n\r\nconst initialValues = {\r\n    email: \"\",\r\n    password: \"\"\r\n};\r\n\r\n\r\nconst submitForm = (values: any) => {\r\n    console.log(values);\r\n};\r\n\r\nconst LoginForm = React.memo(() => {\r\n    let dispatch = useDispatch()\r\n    const [disabled, setDisabled] = React.useState(false)\r\n    const validate = (values: any) => {\r\n        let errors = {\r\n            email: undefined\r\n        };\r\n        const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\r\n\r\n        if (!values.email) {\r\n            // @ts-ignore\r\n            errors.email = \"Email is required\";\r\n            setDisabled(true)\r\n        } else if (!regex.test(values.email)) {\r\n            // @ts-ignore\r\n            errors.email = \"Invalid Email\";\r\n            setDisabled(true)\r\n        }\r\n\r\n        if (!values.password) {\r\n            // @ts-ignore\r\n            errors.password = \"Password is required\";\r\n            setDisabled(true)\r\n        } else if (values.password.length < 4) {\r\n            // @ts-ignore\r\n            errors.password = \"Password too short\";\r\n            setDisabled(true)\r\n        }\r\n\r\n\r\n        return errors;\r\n    };\r\n\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={initialValues}\r\n            validate={validate}\r\n            onSubmit={submitForm}\r\n        >\r\n            {(formik) => {\r\n                const {\r\n                    values,\r\n                    handleChange,\r\n                    handleSubmit,\r\n                    errors,\r\n                    touched,\r\n                    handleBlur,\r\n                } = formik;\r\n                const onLoginHandler = () => {\r\n                    dispatch(getIsLogin(values.email, values.password, true))\r\n                }\r\n\r\n                return (\r\n                    <div className={s.container}>\r\n                        <h1 className={s.title}>Sign in to continue</h1>\r\n                        <form onSubmit={handleSubmit} className={s.form}>\r\n                            <div className={s.formRow}>\r\n                                <div className={s.formLine}>\r\n                                    <label htmlFor=\"email\" className={s.formLabel}>Email</label>\r\n                                    <input\r\n                                        type=\"email\"\r\n                                        name=\"email\"\r\n                                        id=\"email\"\r\n                                        value={values.email}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        className={\r\n                                            errors.email && touched.email ? s.inputError : s.input\r\n                                        }\r\n                                    />\r\n                                    {errors.email && touched.email && (\r\n                                        <span className={s.error}>{errors.email}</span>\r\n                                    )}\r\n                                </div>\r\n                                <div className={s.formLine}>\r\n                                    <label htmlFor=\"password\" className={s.formLabel}>Password</label>\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        name=\"password\"\r\n                                        id=\"password\"\r\n                                        value={values.password}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        className={\r\n                                            errors.password && touched.password ? s.inputError : s.input\r\n                                        }\r\n                                    />\r\n                                    {errors.password && touched.password && (\r\n                                        <span className={s.error}>{errors.password}</span>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                            <button\r\n                                type=\"submit\"\r\n                                className={!disabled ? `${s.disabledBtn} + ${s.btn}` : s.btn}\r\n                                disabled={errors ? !disabled : disabled}\r\n                                onClick={onLoginHandler}\r\n                            >\r\n                                Sign In\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n                );\r\n            }}\r\n        </Formik>\r\n    );\r\n})\r\n\r\nexport default LoginForm;","import React from \"react\";\r\nimport LoginForm from \"./LoginForm/LoginForm\";\r\nimport classes from \"./Login.module.scss\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootReducerType} from \"../../BLL/store\";\r\nimport {Navigate} from \"react-router-dom\";\r\n\r\n\r\nconst Login = () => {\r\n\r\n    // @ts-ignore\r\n    const isAuth = useSelector<RootReducerType, boolean>(state => state.authPage.isAuth)\r\n\r\n\r\n    return (\r\n        isAuth\r\n            ? <Navigate replace to=\"/profile\"/>\r\n            :\r\n            <div className={classes.inner}>\r\n                <LoginForm/>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Login","import {Dispatch} from \"redux\";\r\nimport {CommonApi} from \"../DAL/api\";\r\n\r\ntype setDailyQuoteType = ReturnType<typeof setDailyQuote>\r\ntype setQuoteIsFetchingType = ReturnType<typeof setQuoteIsFetching>\r\n\r\ntype GenericType = setDailyQuoteType | setQuoteIsFetchingType;\r\ntype initStateType = {\r\n    quote: string\r\n    isFetching: boolean\r\n}\r\n\r\nconst initState = {\r\n    quote: '',\r\n    isFetching: false\r\n}\r\n\r\nexport const dailyQuoteReducer = (state: initStateType = initState, action: GenericType) => {\r\n    switch (action.type) {\r\n        case \"SET-QUOTE\": {\r\n            return {\r\n                ...state,\r\n                quote: action.quote\r\n            }\r\n        }\r\n        case \"SET-QUOTE-IS-FETCHING\": {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const setDailyQuote = (quote: string) => {\r\n    return{\r\n        type: 'SET-QUOTE',\r\n        quote\r\n    } as const\r\n}\r\n\r\nexport const setQuoteIsFetching = (isFetching: boolean) => {\r\n    return{\r\n        type: 'SET-QUOTE-IS-FETCHING',\r\n        isFetching\r\n    } as const\r\n}\r\n\r\nexport const getDailyQuote = () => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(setQuoteIsFetching(true))\r\n        CommonApi.getDailyQuote()\r\n            .then((response) => {\r\n                console.log(response.data.quote)\r\n                dispatch(setQuoteIsFetching(false))\r\n                dispatch(setDailyQuote(response.data.quote))\r\n            })\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/q.6adffa40.jpg\";","import React, {useCallback, useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getDailyQuote} from \"../../BLL/daily-quote-reducer\";\r\nimport {RootReducerType} from \"../../BLL/store\";\r\nimport Button from \"../Buttons/Button\";\r\nimport classes from \"./DailyQuote.module.scss\";\r\nimport quoteBg from './../../images/q.jpg'\r\nimport Preloader from \"../Preloader/Preloader\";\r\n\r\nconst DailyQuote = React.memo(() => {\r\n    const dispatch = useDispatch()\r\n    const quote = useSelector<RootReducerType, string>(state => state.dailyQuotePage.quote)\r\n    const isFetching = useSelector<RootReducerType, boolean>(state => state.dailyQuotePage.isFetching)\r\n\r\n\r\n    useEffect( () => {\r\n        dispatch(getDailyQuote())\r\n    },[dispatch] )\r\n\r\n    const onGetQuote = useCallback(() => {\r\n        dispatch(getDailyQuote())\r\n    },[dispatch])\r\n\r\n    return(\r\n        <section className={classes.inner}>\r\n            {isFetching ? <Preloader/> : null}\r\n            <div className={classes.quoteInner}>\r\n                <div className={classes.quote}>\r\n                    <p className={classes.quoteText}>{quote}</p>\r\n                    <Button onClick={onGetQuote} className={'commonBtn'} text={'Get your daily quote'}/>\r\n                </div>\r\n                <img src={quoteBg} alt=\"background\" className={classes.bg}/>\r\n            </div>\r\n        </section>\r\n    )\r\n})\r\n\r\nexport default DailyQuote","import React from \"react\";\r\nimport {Navigate, Route, Routes} from \"react-router-dom\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\n\r\nimport classes from \"./Main.module.css\";\r\nimport Profile from \"../Profile/Profile\";\r\nimport Users from \"../Users/Users\";\r\nimport Login from \"../Login/Login\";\r\nimport DailyQuote from \"../DailyQuote/DailyQuote\";\r\n\r\n\r\nconst Main = React.memo((props: any) => {\r\n\r\n    return(\r\n        <main className={classes.main}>\r\n            <Navbar/>\r\n\r\n            <Routes>\r\n                <Route path={'/kid-social-network'} element={<Navigate to={'/profile'}/>}/>\r\n                <Route path={'/profile'} element={<Profile/>}/>\r\n                <Route path={'/profile/:id'} element={<Profile/>}/>\r\n                <Route path={'/users'} element={<Users/>}/>\r\n                <Route path={'/login'} element={<Login/>}/>\r\n                <Route path={'/daily-quote'} element={<DailyQuote/>}/>\r\n            </Routes>\r\n        </main>\r\n    )\r\n})\r\n\r\nexport default Main","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n    return(\r\n        <footer>\r\n\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from 'react';\nimport './App.css';\nimport Header from \"./Components/Header/Header\";\nimport Main from \"./Components/Main/Main\";\nimport Footer from \"./Components/Footer/Footer\";\n\nfunction App() {\n    return (\n      <>\n          <div className=\"App\">\n              <Header/>\n              <Main/>\n              <Footer/>\n\n          </div>\n      </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import profileReducer from \"./profile-reducer\";\r\nimport {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {authReducer} from \"./auth-reducer\";\r\nimport {dailyQuoteReducer} from \"./daily-quote-reducer\";\r\n\r\nconst RootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    usersPage: usersReducer,\r\n    authPage: authReducer,\r\n    dailyQuotePage: dailyQuoteReducer\r\n})\r\n\r\n\r\nexport let store = createStore(RootReducer, applyMiddleware(thunkMiddleware))\r\n\r\nexport type  RootReducerType = ReturnType<typeof store.getState>\r\n//@ts-ignore\r\nconsole.log(window.store = store)\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./BLL/store\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <BrowserRouter>\n          <Provider store={store}>\n              <App />\n          </Provider>\n      </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}